{"version":3,"file":"js/app_packs_src_decidim_editor_index_js.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;ACjKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAEA;AAEA;AACA;AAeA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC7MA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjazQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;ACnFA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;ACjCA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAIA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvNA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChvBA;AAAA;AAAA;AAyBA;AACA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjjPA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;ACrFA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;ACvQA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://decidim-app/../.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.2/app/packs/src/decidim/icon.js","webpack://decidim-app/../.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-core-0.27.2/app/packs/src/decidim/input_emoji.js","webpack://decidim-app/./app/packs/src/decidim/editor/common/bubble_menu.js","webpack://decidim-app/./app/packs/src/decidim/editor/common/helpers.js","webpack://decidim-app/./app/packs/src/decidim/editor/common/input_dialog.js","webpack://decidim-app/./app/packs/src/decidim/editor/common/suggestion.js","webpack://decidim-app/./app/packs/src/decidim/editor/common/upload_dialog.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/bold/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/character_count/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/decidim_kit/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/dialog/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/emoji/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/hashtag/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/heading/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/image/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/image/node_view.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/indent/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/link/bubble_menu.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/link/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/mention/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/ordered_list/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/extensions/video_embed/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/index.js","webpack://decidim-app/./app/packs/src/decidim/editor/toolbar.js","webpack://decidim-app/./app/packs/src/decidim/editor/utilities/file.js","webpack://decidim-app/./app/packs/src/decidim/editor/utilities/html.js","webpack://decidim-app/./app/packs/src/decidim/editor/utilities/paste_transform.js","webpack://decidim-app/./app/packs/src/decidim/i18n.js"],"sourcesContent":["const DEFAULT_ATTRIBUTES = {\n  role: \"img\",\n  \"aria-hidden\": \"true\"\n};\n\n/**\n * Generates a Decidim icon element and returns it as a string.\n * @param {String} iconKey - the key of the icon to be generated\n * @param {Object} attributes - extra attributes to define for the icon SVG\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\nexport default function icon(iconKey, attributes = {}) {\n  const iconAttributes = $.extend(DEFAULT_ATTRIBUTES, attributes);\n  const title = iconAttributes.title || iconAttributes.ariaLabel;\n  Reflect.deleteProperty(iconAttributes, \"title\");\n\n  const htmlAttributes = {\n    \"class\": `icon icon--${iconKey}`\n  };\n  Object.keys(iconAttributes).forEach((key) => {\n    // Convert the key to dash-format.\n    const newKey = key.replace(/([A-Z])/g, (ucw) => `-${ucw[0].toLowerCase()}`);\n    if (typeof htmlAttributes[key] === \"undefined\") {\n      htmlAttributes[newKey] = iconAttributes[key];\n    } else {\n      htmlAttributes[newKey] = `${htmlAttributes[newKey]} ${iconAttributes[key]}`;\n    }\n  });\n\n  const iconsPath =  window.Decidim.config.get(\"icons_path\");\n  const elHtml = `<svg><use href=\"${iconsPath}#icon-${iconKey}\"></use></svg>`;\n  const $el = $(elHtml);\n  if (title) {\n    $el.prepend(`<title>${title}</title>`);\n  } else {\n    // This keeps accessibility audit tools happy\n    $el.prepend(`<title>${iconKey}</title>`);\n    // Force hidden if title is not defined\n    htmlAttributes[\"aria-hidden\"] = \"true\";\n  }\n  $el.attr(htmlAttributes);\n\n  return $(\"<div />\").append($el).html();\n}\n","import {EmojiButton} from \"@joeattardi/emoji-button\";\n\n// eslint-disable-next-line require-jsdoc\nexport default function addInputEmoji() {\n  const containers = document.querySelectorAll(\"[data-input-emoji]\");\n\n  if (containers.length) {\n    containers.forEach((elem) => {\n      const picker = new EmojiButton({\n        position: \"bottom-end\",\n        rootElement: elem.closest(\"form\")?.parentElement || document.body,\n        zIndex: 2000\n      });\n\n      // if the selector is inside a modal window\n      // this allows shows the emoji menu uncut\n      const reveal = elem.closest(\"[data-reveal]\")\n      if (reveal) {\n        reveal.style.overflowY = \"unset\"\n      }\n\n      const wrapper = document.createElement(\"div\");\n      wrapper.className = \"emoji__container\"\n      const btnContainer = document.createElement(\"div\");\n      btnContainer.className = \"emoji__trigger\"\n      const btn = document.createElement(\"div\");\n      btn.className = \"emoji__button\"\n      btn.innerHTML = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"smile\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\"><path fill=\"currentColor\" d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z\"></path></svg>'\n\n      const parent = elem.parentNode;\n      parent.insertBefore(wrapper, elem);\n      wrapper.appendChild(elem);\n      wrapper.appendChild(btnContainer);\n      btnContainer.appendChild(btn);\n\n      // The form errors need to be in the same container with the field they\n      // belong to for Foundation Abide to show them automatically.\n      parent.querySelectorAll(\".form-error\").forEach((el) => wrapper.appendChild(el));\n\n      let handlerPicker = function () {\n        picker.togglePicker(btnContainer);\n      }\n\n      btnContainer.addEventListener(\"click\", handlerPicker);\n\n      elem.addEventListener(\"characterCounter\", (event) => {\n        if (event.detail.remaining >= 4) {\n          btnContainer.addEventListener(\"click\", handlerPicker);\n          btnContainer.removeAttribute(\"style\");\n        } else {\n          btnContainer.removeEventListener(\"click\", handlerPicker);\n          btnContainer.setAttribute(\"style\", \"color:lightgrey\");\n        }\n      });\n\n\n      picker.on(\"emoji\", ({emoji}) => {\n        elem.value += ` ${emoji} `\n\n        const event = new Event(\"emoji.added\");\n        elem.dispatchEvent(event);\n      });\n    })\n  }\n};\n","import { isNodeSelection, posToDOMRect } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nconst createBubbleRoot = (content) => {\n  const root = document.createElement(\"div\");\n  root.style.cssText = `\n    z-index: 9999;\n    position: absolute;\n    visibility: hidden;\n    inset: 0 auto auto 0;\n    margin: 0;\n  `;\n  root.dataset.bubbleMenu = \"\";\n  root.append(content);\n\n  return root;\n}\n\nconst createProseMirrorPlugin = (pluginKey, bubbleMenu) => {\n  return new Plugin({\n    key: pluginKey,\n    view () {\n      return {\n        update: function (view, prevState) {\n          const state = view.state;\n          if (prevState && prevState.doc.eq(state.doc) && prevState.selection.eq(state.selection)) {\n            return;\n          }\n\n          bubbleMenu.handleSelectionChange(view);\n        }\n      }\n    }\n  })\n};\n\n/**\n * A custom bubble menu based on `@tiptap/extension-bubble-menu`.\n *\n * This has been customized for this purpose in order to support the use case\n * better and due to some weird behavior in the original extension. This allows\n * us to control also externally when to show and hide the bubble menu instead\n * of leaving it up to the Tiptap extension which does not recognize all the\n * events, such as opening or closing a dialog.\n *\n * The actual bubble menu implementations can implement the following methods by\n * extending this class:\n * - `shouldDisplay()` - defines when the bubble menu is displayed by returning\n *   a boolean indicating the display status, returns `false` by default\n * - `display()` - called when the bubble menu is displayed allowing any updates\n *   to the bubble element by the implementation\n * - `handleAction()` - called when any button within the bubble menu is clicked\n */\nexport default class BubbleMenu {\n  constructor({ editor, element, pluginKey }) {\n    this.editor = editor;\n\n    this.element = element;\n    this.element.querySelectorAll(\"button\").forEach((el) => {\n      const action = el.dataset.action;\n      el.addEventListener(\"click\", (ev) => {\n        ev.preventDefault();\n        this.handleAction(action);\n      });\n    });\n\n    this.bubble = createBubbleRoot(this.element);\n    this.bubbleShown = false;\n\n    this.plugin = createProseMirrorPlugin(pluginKey, this);\n    this.editor.registerPlugin(this.plugin);\n  }\n\n  show() {\n    if (this.bubbleShown) {\n      return;\n    }\n    this.editor.view.dom.parentElement.append(this.bubble);\n    this.bubble.style.visibility = \"visible\";\n    this.bubbleShown = true;\n  }\n\n  hide() {\n    if (!this.bubbleShown) {\n      return;\n    }\n    this.bubble.style.visibility = \"hidden\";\n    this.bubble.remove();\n    this.bubbleShown = false;\n  }\n\n  destroy() {\n    this.hide();\n    this.bubble = null;\n    this.editor.unregisterPlugin(this.plugin.key);\n  }\n\n  handleSelectionChange(view) {\n    if (this.editor.commands.isDialogOpen()) {\n      this.hide();\n      return;\n    }\n    if (this.shouldDisplay(view)) {\n      this.display(view);\n      this.show();\n      this.updatePosition(view);\n\n      return;\n    }\n    this.hide();\n  }\n\n  getReferenceRect(view) {\n    const { state } = view;\n    const { ranges } = state.selection;\n    const from = Math.min(...ranges.map((range) => range.$from.pos));\n    const to = Math.max(...ranges.map((range) => range.$to.pos));\n\n    if (isNodeSelection(state.selection)) {\n      const node = view.nodeDOM(from);\n      if (node) {\n        return node.getBoundingClientRect();\n      }\n    }\n\n    return posToDOMRect(view, from, to);\n  }\n\n  updatePosition(view) {\n    const editorRect = view.dom.getBoundingClientRect();\n    const referenceRect = this.getReferenceRect(view);\n\n    const xDiff = referenceRect.left - editorRect.left;\n    const yDiff = referenceRect.top - editorRect.top;\n    const width = this.bubble.clientWidth;\n    const height = this.bubble.clientHeight;\n\n    let xPos = Math.round(xDiff - width / 2);\n    if (xPos < 5) {\n      xPos = 5;\n    }\n\n    let yPos = Math.round(yDiff + height - 5);\n    if (yPos < 5) {\n      yPos = 5;\n    }\n\n    this.bubble.style.transform = `translate(${xPos}px, ${yPos}px)`;\n  }\n\n  shouldDisplay() {\n    // This can be overridden by the implementation\n    return false;\n  }\n\n  display() {\n    // This can be overridden by the implementation\n  }\n\n  handleAction() {\n    // This can be overridden by the implementation\n  }\n}\n","export const uniqueId = (prefix) => {\n  return `${prefix}-${(new Date()).getTime()}-${Math.random().toString(16).slice(2)}`;\n};\n","import Dialog from \"a11y-dialog-component\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\nimport { uniqueId } from \"src/decidim/editor/common/helpers\";\n\nexport default class InputDialog {\n  constructor(editor, { inputs }) {\n    this.editor = editor;\n    // The legacy design should not have any elements on the page with the\n    // `data-dialog` attribute.\n    this.legacyDesign = !document.querySelector(\"[data-dialog]\");\n    const inputId = uniqueId(\"inputdialog\");\n    this.element = document.createElement(\"div\");\n    if (this.legacyDesign) {\n      this.element.classList.add(\"reveal\");\n      this.element.setAttribute(\"data-reveal\", \"\");\n    } else {\n      this.element.dataset.dialog = `${Math.random().toString(36).slice(2)}`;\n    }\n\n    let inputsHTML = \"\";\n    Object.keys(inputs).forEach((name) => {\n      const input = inputs[name];\n      let inputHTML = \"\";\n      if (input.type === \"select\") {\n        const optionsHTML = input.options.map((opt) => `<option value=\"${opt.value}\">${opt.label}</option>`)\n        inputHTML = `<select id=\"${inputId}-${name}\">${optionsHTML}</select>`;\n      } else {\n        inputHTML = `<input id=\"${inputId}-${name}\" type=\"${input.type || \"text\"}\">`;\n      }\n\n      inputsHTML += `\n        <div data-input=\"${name}\">\n          <label>\n            ${input.label}\n            ${inputHTML}\n          </label>\n        </div>\n      `;\n    });\n\n    const i18n = getDictionary(\"editor.inputDialog\");\n\n    if (this.legacyDesign) {\n      this.element.innerHTML = `\n        <div>\n          <form>\n            ${inputsHTML}\n            <input type=\"submit\" hidden>\n          </form>\n        </div>\n        <div class=\"row columns\">\n          <div class=\"text-center\">\n            <button type=\"button\" class=\"button mr-xs mb-none\" data-action=\"save\">${i18n[\"buttons.save\"]}</button>\n            <button type=\"button\" class=\"button clear mb-none\" data-action=\"cancel\">${i18n[\"buttons.cancel\"]}</button>\n          </div>\n        </div>\n      `;\n\n      document.body.appendChild(this.element);\n      $(this.element).foundation();\n\n      // Foundation needs jQuery\n      $(this.element).on(\"open.zf.reveal\", () => {\n        setTimeout(() => this.focusFirstInput(), 0);\n      });\n      $(this.element).on(\"closed.zf.reveal\", () => {\n        setTimeout(() => this.handleClose(), 0);\n      });\n    } else {\n      const uniq = this.element.dataset.dialog;\n      this.element.innerHTML = `\n        <div id=\"${uniq}-content\">\n          <button type=\"button\" data-dialog-close=\"${uniq}\" data-dialog-closable=\"\" aria-label=\"${i18n.close}\">&times</button>\n          <div data-dialog-container>\n            <form>\n              <div class=\"form__wrapper\">\n                ${inputsHTML}\n              </div>\n              <input type=\"submit\" hidden>\n            </form>\n          </div>\n          <div data-dialog-actions>\n            <button type=\"button\" class=\"button button__sm md:button__lg button__transparent-secondary\" data-action=\"cancel\">${i18n[\"buttons.cancel\"]}</button>\n            <button type=\"button\" class=\"button button__sm md:button__lg button__secondary\" data-action=\"save\">${i18n[\"buttons.save\"]}</button>\n          </div>\n        </div>\n      `;\n      document.body.appendChild(this.element);\n\n      this.dialog = new Dialog(`[data-dialog=\"${uniq}\"]`, {\n        // openingSelector: `[data-dialog-open=\"${uniq}\"]`,\n        closingSelector: `[data-dialog-close=\"${uniq}\"]`,\n        backdropSelector: `[data-dialog=\"${uniq}\"]`,\n        enableAutoFocus: false,\n        onOpen: () => {\n          setTimeout(() => this.focusFirstInput(), 0);\n        },\n        onClose: () => {\n          setTimeout(() => this.handleClose(), 0);\n        }\n      });\n    }\n\n    this.element.querySelector(\"form\").addEventListener(\"submit\", (ev) => {\n      ev.preventDefault();\n\n      const btn = this.element.querySelector(\"button[data-action='save']\");\n      btn.dispatchEvent(new Event(\"click\"));\n    });\n    this.element.querySelectorAll(\"button[data-action]\").forEach((button) => {\n      button.addEventListener(\"click\", (ev) => {\n        ev.preventDefault();\n        this.action = button.dataset.action;\n        this.close();\n      });\n    });\n  }\n\n  toggle(currentValues = {}) {\n    return new Promise((resolve) => {\n      this.element.querySelectorAll(\"[data-input]\").forEach((wrapper) => {\n        const input = wrapper.querySelector(\"input, select\");\n        const currentValue = currentValues[wrapper.dataset.input];\n        if (currentValue) {\n          input.value = currentValue;\n        } else {\n          input.value = \"\";\n        }\n      });\n\n      this.callback = resolve;\n      this.action = null;\n\n      this.editor.commands.toggleDialog(true);\n\n      if (this.legacyDesign) {\n        // Foundation needs jQuery\n        $(this.element).foundation(\"open\");\n      } else {\n        this.dialog.open();\n      }\n    })\n  }\n\n  close() {\n    if (this.legacyDesign) {\n      // Foundation needs jQuery\n      $(this.element).foundation(\"close\");\n    } else {\n      this.dialog.close();\n    }\n  }\n\n  destroy() {\n    if (this.legacyDesign) {\n      // Foundation needs jQuery\n      $(this.element).foundation(\"_destroy\");\n      this.element.remove();\n    } else {\n      this.dialog.destroy();\n      this.element.remove();\n      Reflect.deleteProperty(this, \"dialog\");\n    }\n  }\n\n  /**\n   * This is fired when the dialog is actually closed. The `close()` method only\n   * initiates the closing of the dialog.\n   *\n   * @returns {void}\n   */\n  handleClose() {\n    this.editor.chain().toggleDialog(false).focus(null, { scrollIntoView: false }).run();\n\n    if (this.callback) {\n      this.callback(this.action);\n      this.callback = null;\n    }\n    if (this.action) {\n      this.action = null;\n    }\n\n    this.destroy();\n  }\n\n  focusFirstInput() {\n    const firstInput = this.element.querySelector(\"input, select\");\n    if (firstInput) {\n      firstInput.focus();\n    }\n  }\n\n  getValue(key = \"default\") {\n    const wrapper = this.element.querySelector(`[data-input=\"${key}\"]`);\n    if (!wrapper) {\n      return null;\n    }\n\n    const input = wrapper.querySelector(\"input, select\");\n    if (input) {\n      return input.value;\n    }\n\n    return null;\n  }\n}\n","/* global jest */\n\nexport const createSuggestionRenderer = (node, { itemConverter } = {}) => () => {\n  let suggestion = null;\n  let suggestionItems = null;\n  let selectCommand = null;\n  let selectedIndex = -1;\n  let currentEditor = null;\n  let currentRange = null;\n\n  const convertItem = (item) => {\n    let finalItem = item;\n    if (itemConverter) {\n      finalItem = itemConverter(item);\n    }\n\n    if (finalItem instanceof Object) {\n      return finalItem;\n    }\n    return { label: finalItem };\n  }\n\n  const updateSelectedItem = (direction) => {\n    let count = 0;\n    suggestion.querySelectorAll(\".editor-suggestions-item\").forEach((item, idx) => {\n      if (item.dataset.selected === \"true\") {\n        selectedIndex = idx;\n      }\n      item.removeAttribute(\"data-selected\");\n      count += 1;\n    });\n    if (direction === \"up\") {\n      selectedIndex -= 1;\n    } else {\n      selectedIndex += 1;\n    }\n    if (selectedIndex < 0) {\n      selectedIndex = 0;\n    } else if (selectedIndex === count) {\n      selectedIndex -= 1;\n    }\n\n    if (selectedIndex > -1) {\n      const item = suggestion.querySelector(`.editor-suggestions-item[data-index=\"${selectedIndex}\"]`)\n      if (item) {\n        item.dataset.selected = \"true\";\n      }\n    }\n  };\n\n  const selectItem = (idx) => {\n    const items = suggestionItems;\n    const command = selectCommand;\n    if (currentRange && typeof jest === \"undefined\") {\n      // Fixes an issue that after selecting the item, the written text will be\n      // placed after the newly added suggestion.\n      //\n      // NOTE: With JSDom/Jest this does not work even if we add a delay after\n      // changing the text in the selection. This is because the range remains\n      // the same for the `command` below which is why the underlying code is\n      // trying to do an insertion at a position that is out of range after we\n      // have already deleted the content.\n      currentEditor.chain().focus().setTextSelection(currentRange).command(({ tr, dispatch }) => {\n        if (dispatch) {\n          tr.replaceSelectionWith(currentEditor.schema.text(\"  \"));\n        }\n\n        return true;\n      }).setTextSelection({ from: currentRange.from, to: currentRange.from }).run();\n    }\n    command(convertItem(items[idx]));\n  };\n\n  const showSuggestions = ({ items, clientRect }) => {\n    const rect = clientRect();\n    Object.assign(suggestion.style, {\n      position: \"absolute\",\n      top: `${document.documentElement.scrollTop + rect.top + rect.height}px`,\n      left: `${rect.left}px`\n    });\n\n    suggestion.classList.remove(\"hidden\", \"hide\");\n    suggestion.innerHTML = \"\";\n    items.forEach((rawItem, idx) => {\n      const { label, id } = convertItem(rawItem);\n      const suggestionItem = document.createElement(\"button\");\n      suggestionItem.type = \"button\";\n      suggestionItem.classList.add(\"editor-suggestions-item\");\n      if (id) {\n        suggestionItem.dataset.id = id;\n      }\n      suggestionItem.dataset.index = idx;\n      suggestionItem.dataset.value = label;\n      if (idx === 0) {\n        selectedIndex = idx;\n        suggestionItem.dataset.selected = \"true\";\n      }\n      suggestionItem.textContent = label;\n      suggestion.append(suggestionItem);\n\n      suggestionItem.addEventListener(\"click\", () => selectItem(idx));\n    });\n  }\n\n  return {\n    onStart({ editor, items, clientRect, command }) {\n      currentEditor = editor;\n      suggestionItems = items;\n      selectCommand = command;\n      suggestion = document.createElement(\"div\");\n      document.body.append(suggestion);\n      suggestion.classList.add(\"editor-suggestions\", \"hidden\", \"hide\");\n\n      if (items.length > 0) {\n        showSuggestions({ clientRect, items });\n      }\n    },\n\n    onUpdate({ clientRect, items }) {\n      if (!clientRect || !suggestion) {\n        return;\n      }\n\n      suggestionItems = items;\n\n      if (items.length > 0) {\n        showSuggestions({ clientRect, items });\n      } else {\n        suggestion.classList.add(\"editor-suggestions\", \"hidden\", \"hide\");\n      }\n    },\n\n    onKeyDown({ event, range }) {\n      currentRange = range;\n\n      if (event.key === \"Escape\") {\n        suggestion.classList.add(\"hidden\", \"hide\");\n        return true;\n      } else if (event.key === \"ArrowUp\") {\n        updateSelectedItem(\"up\");\n        return true;\n      } else if (event.key === \"ArrowDown\") {\n        updateSelectedItem(\"down\");\n        return true;\n      } else if (event.key === \"Enter\") {\n        if (selectedIndex > -1) {\n          selectItem(selectedIndex);\n        }\n        selectedIndex = -1;\n        return true;\n      }\n\n      return false;\n    },\n\n    onExit() {\n      suggestion.remove();\n\n      suggestion = suggestionItems = selectCommand = currentEditor = currentRange = null;\n      selectedIndex = -1;\n    }\n  }\n};\n\nexport const createNodeView = (self) => {\n  return ({ node }) => {\n    const dom = document.createElement(\"span\");\n    dom.textContent = self.options.renderLabel({ options: self.options, node });\n\n    const { id, label } = node.attrs;\n    dom.dataset.suggestion = node.type.name;\n    if (id) {\n      dom.dataset.id = id;\n    }\n    dom.dataset.label = label;\n\n    return { dom };\n  };\n};\n","import icon from \"src/decidim/icon\";\nimport { fileNameToTitle } from \"src/decidim/editor/utilities/file\";\n\nconst createElement = (template) => {\n  const el = document.createElement(\"div\");\n  el.innerHTML = template;\n  return el.firstElementChild;\n}\n\n/**\n * This is a simplified version of the normal upload dialog, uses the same\n * markup as the normal upload dialog to maintain consistency.\n *\n * The functionality differs from the original dialog as this only handles the\n * file uploads for the editor and the purpose is to simply provide the same\n * upload functionality and ability to update the alternative texts for the\n * images within the editor.\n *\n * This works only for the editor and does not store the files in the view\n * inputs as they are only used.\n */\nexport default class UploadDialog {\n  constructor(element, { i18n, onOpen, onClose }) {\n    this.element = element;\n    this.i18n = i18n;\n    this.legacyDesign = Boolean(element.dataset.reveal);\n    this.onOpen = onOpen;\n    this.onClose = onClose;\n\n    this.values = { src: null, alt: null };\n    this.dropZoneEnabled = true;\n    this.exitMode = \"cancel\";\n\n    let extra = null;\n    this.messageSection = document.createElement(\"div\");\n    this.currentFileSection = document.createElement(\"div\");\n    this.inputSection = document.createElement(\"div\");\n    if (this.legacyDesign) {\n      this.saveButton = this.element.querySelector(\"button.add-file-file\");\n      this.cancelButton = this.element.querySelector(\"button.cancel-attachment\");\n      this.dropZone = this.element.querySelector(\".dropzone\");\n\n      const dc = this.element.querySelector(\".dropzone-container\");\n      extra = document.createElement(\"div\");\n      dc.parentNode.insertBefore(extra, dc.nextSibling);\n    } else {\n      this.saveButton = this.element.querySelector(\"button[data-dropzone-save]\");\n      this.cancelButton = this.element.querySelector(\"button[data-dropzone-cancel]\");\n      this.dropZone = this.element.querySelector(\"[data-dropzone]\");\n\n      extra = document.createElement(\"div\");\n      this.dropZone.parentNode.insertBefore(extra, this.dropZone.nextSibling);\n    }\n\n    extra.append(this.messageSection);\n    extra.append(this.currentFileSection);\n\n    if (this.legacyDesign) {\n      extra.append(this.inputSection);\n    } else {\n      this.dropZone.parentNode.querySelector(\".upload-modal__text\").classList.add(\"mb-0\");\n      this.dropZone.parentNode.append(this.inputSection);\n    }\n\n    this.saveButton.addEventListener(\"click\", () => {\n      this.exitMode = \"save\";\n    });\n    this.cancelButton.addEventListener(\"click\", () => {\n      this.exitMode = \"cancel\";\n    });\n\n    this.dropZone.addEventListener(\"change\", (event) => {\n      event.preventDefault();\n      const files = event.target.files;\n      if (files.length < 1) {\n        return;\n      }\n      this.uploadFile(files[0]);\n    });\n\n    const toggleDragover = (active) => {\n      if (active) {\n        this.dropZone.classList.add(\"is-dragover\");\n        this.dropZone.querySelectorAll(\".upload-modal__dropzone\").forEach((el) => el.classList.add(\"is-dragover\"));\n      } else {\n        this.dropZone.classList.remove(\"is-dragover\");\n        this.dropZone.querySelectorAll(\".upload-modal__dropzone\").forEach((el) => el.classList.remove(\"is-dragover\"));\n      }\n    };\n    const dropEvents = {\n      dragenter: (event) => event.preventDefault(),\n      dragleave: () => toggleDragover(false),\n      dragover: (event) => {\n        event.preventDefault();\n        toggleDragover(true);\n      },\n      drop: (event) => {\n        event.preventDefault();\n        toggleDragover(false);\n        this.messageSection.innerHTML = \"\";\n\n        const files = event.dataTransfer.files;\n        if (files.length < 1) {\n          return;\n        }\n        this.uploadFile(files[0]);\n      }\n    };\n    Object.keys(dropEvents).forEach((key) => {\n      this.dropZone.addEventListener(key, dropEvents[key]);\n    });\n\n    const handleClose = () => {\n      const titleInput = this.inputSection.querySelector(\".attachment-title\");\n      if (titleInput) {\n        this.values.alt = titleInput.value;\n      }\n\n      if (this.onClose) {\n        this.onClose(this);\n      }\n      if (this.callback) {\n        this.callback(this.exitMode);\n        this.callback = null;\n      }\n    };\n    if (this.legacyDesign) {\n      $(this.element).on(\"closed.zf.reveal\", handleClose);\n    } else {\n      this.element.addEventListener(\"close.dialog\", () => setTimeout(handleClose, 0));\n    }\n  }\n\n  getValue(key) {\n    return this.values[key];\n  }\n\n  toggle(values = {}, options = {}) {\n    this.exitMode = \"cancel\";\n\n    return new Promise((resolve) => {\n      this.saveButton.disabled = true;\n      this.values = { src: values.src, alt: values.alt }\n\n      this.updateCurrentFile();\n\n      let titleEl = null;\n      if (this.legacyDesign) {\n        titleEl = this.element.querySelector(\".reveal__title\");\n      } else {\n        titleEl = this.element.querySelector(\"[data-dialog-title]\");\n      }\n\n      if (values.src && values.src.length > 0) {\n        titleEl.textContent = titleEl.dataset.editlabel;\n      } else {\n        titleEl.textContent = titleEl.dataset.addlabel;\n      }\n\n      const titleInputHtml = `\n        <label>\n          ${options.inputLabel}\n          <input class=\"attachment-title\" type=\"text\" name=\"alt\">\n        </label>\n      `;\n\n      let titleSection = null;\n      if (this.legacyDesign) {\n        titleSection = createElement(`<div class=\"row\">${titleInputHtml}</div>`);\n      } else {\n        titleSection = createElement(`<div class=\"form__wrapper\">${titleInputHtml}</div>`);\n      }\n      titleSection.querySelector(\".attachment-title\").value = values.alt || \"\";\n      this.inputSection.innerHTML = \"\";\n      this.inputSection.append(titleSection);\n\n      this.uploadHandler = options.uploadHandler;\n\n      if (this.legacyDesign) {\n        $(this.element).foundation(\"open\");\n      } else {\n        const dialogId = this.element.dataset.dialog;\n        const dialog = window.Decidim.currentDialogs[dialogId];\n        if (dialog) {\n          dialog.open();\n        } else {\n          console.error(`Upload dialog not initialized for: ${dialogId}`);\n        }\n      }\n\n      this.callback = resolve;\n\n      if (this.onOpen) {\n        this.onOpen(this);\n      }\n    });\n  }\n\n  updateCurrentFile(file) {\n    const items = this.dropZone.querySelector(\"[data-dropzone-items]\");\n\n    if (!this.values.src || this.values.src.length < 1) {\n      if (this.legacyDesign) {\n        this.currentFileSection.innerHTML = \"\";\n      } else {\n        items.setAttribute(\"hidden\", \"hidden\");\n        items.innerHTML = \"\";\n      }\n      return;\n    }\n\n    this.saveButton.disabled = false;\n    if (this.legacyDesign) {\n      this.currentFileSection.innerHTML = `\n        <img src=\"${this.values.src}\" alt=\"${this.i18n.uploadedFile}\" style=\"max-width:100px\">\n      `;\n    } else if (file) {\n      items.removeAttribute(\"hidden\");\n      items.innerHTML = `\n        <li data-filename=\"${file.name}\" data-state=\"validated\">\n          <div data-template=\"ok\">\n            <div><img src=\"${this.values.src}\" alt=\"${this.i18n.uploadedFile}\"></div>\n            <span>${file.name}</span>\n          </div>\n        </li>\n      `;\n    }\n  }\n\n  async uploadFile(file) {\n    if (!this.uploadHandler) {\n      return;\n    }\n\n    const response = await this.uploadHandler(file);\n    if (!response.url) {\n      if (this.legacyDesign) {\n        this.messageSection.innerHTML = `<div class=\"form-error is-visible\">${response.message}</div>`;\n      } else {\n        const items = this.dropZone.querySelector(\"[data-dropzone-items]\");\n        const locales = JSON.parse(items.dataset.locales);\n        items.removeAttribute(\"hidden\");\n        items.innerHTML = `\n          <li data-filename=\"${file.name}\" data-state=\"validated\">\n            <div data-template=\"error\">\n              <div>${icon(\"error-warning-line\")}</div>\n              <div>\n                <span>${file.name}</span>\n                <span>${locales.validation_error}</span>\n                <ul><li>${response.message}</li></ul>\n              </div>\n            </div>\n          </li>\n        `;\n      }\n      return;\n    }\n    this.values.src = response.url;\n\n    const titleInput = this.inputSection.querySelector(\".attachment-title\");\n    if (titleInput && (!titleInput.value || titleInput.value.length < 1)) {\n      titleInput.value = fileNameToTitle(file.name);\n    }\n\n    this.updateCurrentFile(file);\n  }\n}\n","import Bold from \"@tiptap/extension-bold\";\n\n/**\n * Extends the bold extension to fix a bug with pasting the following kind of\n * content from Google docs (this is about how Google docs formats the content):\n *\n * <b style=\"font-weight:normal;\">\n *   <ol>\n *      <li><p><span style=\"font-weight:700;\">Item 1</span></p></li>\n *      <ol>\n *        <li><p><span style=\"font-weight:400;\">Item 1</span></p></li>\n *      </ol>\n *   </ol>\n * </b>\n *\n * See: https://github.com/ueberdosis/tiptap/issues/3735\n */\nexport default Bold.extend({\n  parseHTML() {\n    return [\n      {\n        tag: \"strong\"\n      },\n      {\n        tag: \"b\",\n        getAttrs: (node) => node.style.fontWeight !== \"normal\" && node.style.fontWeight !== \"400\" && null\n      },\n      {\n        tag: \"span\",\n        getAttrs: (node) => (/^(bold(er)?|[5-9]\\d{2,})$/).test(node.style.fontWeight) && null\n      }\n    ]\n  }\n});\n","import { Plugin } from \"prosemirror-state\";\n\nimport CharacterCount from \"@tiptap/extension-character-count\";\n\n/**\n * Extends the character counter to prevent adding new paragraphs after the\n * character limit is reached. The original character counter allows that.\n *\n * See: https://github.com/ueberdosis/tiptap/issues/3721\n */\nexport default CharacterCount.extend({\n  addProseMirrorPlugins() {\n    const limit = this.options.limit;\n    const plugins = this.parent?.();\n    if (limit === 0 || limit === null || !limit) {\n      return plugins;\n    }\n\n    const  { storage } = this.editor;\n    return [\n      ...plugins,\n      new Plugin({\n        props: {\n          handleKeyDown(view, event) {\n            if (event.key === \"Enter\") {\n              return storage.characterCount.characters() >= limit;\n            }\n\n            return false;\n          }\n        }\n      })\n    ];\n  }\n});\n","import { Extension } from \"@tiptap/core\";\n\nimport StarterKit from \"@tiptap/starter-kit\";\nimport CodeBlock from \"@tiptap/extension-code-block\";\nimport Underline from \"@tiptap/extension-underline\";\n\nimport CharacterCount from \"src/decidim/editor/extensions/character_count\";\nimport Bold from \"src/decidim/editor/extensions/bold\";\nimport Dialog from \"src/decidim/editor/extensions/dialog\";\nimport Hashtag from \"src/decidim/editor/extensions/hashtag\";\nimport Heading from \"src/decidim/editor/extensions/heading\";\nimport OrderedList from \"src/decidim/editor/extensions/ordered_list\";\nimport Image from \"src/decidim/editor/extensions/image\";\nimport Indent from \"src/decidim/editor/extensions/indent\";\nimport Link from \"src/decidim/editor/extensions/link\";\nimport Mention from \"src/decidim/editor/extensions/mention\";\nimport VideoEmbed from \"src/decidim/editor/extensions/video_embed\";\nimport Emoji from \"src/decidim/editor/extensions/emoji\";\n\nexport default Extension.create({\n  name: \"decidimKit\",\n\n  addOptions() {\n    return {\n      characterCount: { limit: null },\n      heading: { levels: [2, 3, 4, 5, 6] },\n      link: { allowTargetControl: false },\n      videoEmbed: false,\n      image: {\n        uploadDialogSelector: null,\n        uploadImagesPath: null,\n        contentTypes: /^image\\/(jpe?g|png|svg|webp)$/i\n      },\n      hashtag: false,\n      mention: false,\n      emoji: false\n    };\n  },\n\n  addExtensions() {\n    const extensions = [\n      StarterKit.configure({\n        heading: false,\n        bold: false,\n        orderedList: false,\n        codeBlock: false\n      }),\n      CharacterCount.configure(this.options.characterCount),\n      Link.configure({ openOnClick: false, ...this.options.link }),\n      Bold,\n      Dialog,\n      Indent,\n      OrderedList,\n      CodeBlock,\n      Underline\n    ];\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options.heading));\n    }\n\n    if (this.options.videoEmbed !== false) {\n      extensions.push(VideoEmbed.configure(this.options.videoEmbed));\n    }\n\n    if (this.options.image !== false && this.options.image.uploadDialogSelector) {\n      extensions.push(Image.configure(this.options.image));\n    }\n\n    if (this.options.hashtag !== false) {\n      extensions.push(Hashtag.configure(this.options.hashtag));\n    }\n\n    if (this.options.mention !== false) {\n      extensions.push(Mention.configure(this.options.mention));\n    }\n\n    if (this.options.emoji !== false) {\n      extensions.push(Emoji.configure(this.options.emoji));\n    }\n\n    return extensions;\n  }\n});\n","import { Extension } from \"@tiptap/core\";\nimport { Plugin, PluginKey } from \"prosemirror-state\";\n\nexport default Extension.create({\n  name: \"dialog\",\n\n  addStorage() {\n    return { open: false };\n  },\n\n  addCommands() {\n    return {\n      isDialogOpen: () => () => this.storage.open,\n      toggleDialog: (open) => () => (this.storage.open = open)\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey(\"editable\"),\n        props: {\n          attributes: () => {\n            if (this.storage.open) {\n              return { class: \"dialog-open\" };\n            }\n\n            return {};\n          }\n        }\n      })\n    ]\n  }\n});\n","import { Extension } from \"@tiptap/core\";\n\nimport { EmojiButton } from \"src/decidim/input_emoji\";\n\nconst createEmojiButton = (editor) => {\n  const { view: { dom } } = editor;\n  return new EmojiButton(dom);\n}\n\nexport default Extension.create({\n  name: \"emoji\",\n\n  onCreate({ editor }) {\n    createEmojiButton(editor);\n  }\n});\n","import Mention from \"@tiptap/extension-mention\";\nimport { PluginKey } from \"prosemirror-state\";\n\nimport { createSuggestionRenderer, createNodeView } from \"src/decidim/editor/common/suggestion\";\n\nexport const HashtagPluginKey = new PluginKey(\"hashtag\");\n\nconst searchHashtags = async (queryText) => {\n  return fetch(\"/api\", {\n    method: \"POST\",\n    cache: \"no-cache\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ query: `{ hashtags(name:\"${queryText}\") {name} }` })\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(\"Could not retrieve data\");\n  }).then((json) => (json.data.hashtags || []));\n};\n\n/**\n * The hashtag extension does not yet exist in the TipTap public repository and\n * also the documentation page shows it as\n * https://tiptap.dev/api/nodes/hashtag\n */\nexport default Mention.extend({\n  name: \"hashtag\",\n\n  addOptions() {\n    const options = this.parent?.();\n    const suggestion = options?.suggestion;\n\n    return {\n      ...options,\n      renderLabel({ node }) {\n        // The labels already have the suggestion character in front of them\n        // which is why we do not want to add it twice.\n        return `${node.attrs.label ?? node.attrs.id}`\n      },\n      suggestion: {\n        ...suggestion,\n        char: \"#\",\n        pluginKey: HashtagPluginKey,\n        items: async ({ query }) => {\n          if (query.length < 2) {\n            return [];\n          }\n\n          const data = await searchHashtags(query);\n          const sorted = data.sort((tag) => tag.name);\n          return sorted.slice(0, 5);\n        },\n        render: createSuggestionRenderer(this, {\n          itemConverter: (tag) => {\n            return { label: `#${tag.name}` }\n          }\n        })\n      }\n    };\n  },\n\n  addNodeView() {\n    return createNodeView(this);\n  }\n});\n","import { textblockTypeInputRule } from \"@tiptap/core\";\n\nimport Heading from \"@tiptap/extension-heading\";\n\n/**\n * Customized version of the Heading extension in order to fix compatibility\n * issue with the Hashtag extension. The default input rule of the Heading\n * extension would also match any paragraphs that have only one hashtag in them\n * and nothing else because that indicates the first level of heading.\n *\n * E.g.\n * - If you have the following paragraph: `<p>#apples</p>`\n * - This would be converted to a paragraph containing the hashtag node markup\n *   in the editor.\n * - If you come back to edit this content and try to enter a space right after\n *   the hashtag, the hashtag would disappear and the active text block would\n *   get the second heading level applied to it\n *\n * Since we do not allow the user to enter the first level of headings through\n * the editor, we can fix this by limiting the markdown shortcut to the second\n * level headings and above.\n */\nexport default Heading.extend({\n  addInputRules() {\n    return this.options.levels.map((level) => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{2,${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: { level }\n      })\n    })\n  }\n});\n","import { mergeAttributes } from \"@tiptap/core\";\nimport Image from \"@tiptap/extension-image\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\nimport { fileNameToTitle } from \"src/decidim/editor/utilities/file\";\nimport createNodeView from \"src/decidim/editor/extensions/image/node_view\";\n\nimport UploadDialog from \"src/decidim/editor/common/upload_dialog\";\n\nconst createImageUploadDialog = (editor, { uploadDialogSelector }) => {\n  const i18nUpload = getDictionary(\"editor.upload\");\n  return new UploadDialog(\n    document.querySelector(uploadDialogSelector),\n    {\n      i18n: i18nUpload,\n      onOpen: () => editor.commands.toggleDialog(true),\n      onClose: () => editor.chain().toggleDialog(false).focus(null, { scrollIntoView: false }).run()\n    }\n  );\n}\n\nconst uploadImage = async (image, uploadUrl) => {\n  const token = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\n\n  const data = new FormData();\n  data.append(\"image\", image);\n\n  const i18n = getDictionary(\"editor.extensions.image\");\n\n  return new Promise((resolve, reject) => {\n    fetch(uploadUrl, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: { \"X-CSRF-Token\": token },\n      body: data\n    }).then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      return new Promise((responseResolve) => responseResolve({ message: i18n.uploadError }));\n    }).then(\n      (json) => resolve({ title: fileNameToTitle(image.name), ...json })\n    ).catch(reject);\n  });\n}\n\nconst filterImages = (files, contentTypes) => {\n  return Array.from(files).filter(\n    (file) => {\n      if (contentTypes instanceof RegExp) {\n        return contentTypes.test(file.type)\n      } else if (contentTypes instanceof Array) {\n        return contentTypes.includes(file.type);\n      }\n      // string\n      return contentTypes === file.type;\n    }\n  );\n}\n\n/**\n * Handles the image uploads through ActiveStorage when they are dropped or\n * pasted to the editor.\n *\n * Paste and drop handling based on:\n * https://gist.github.com/slava-vishnyakov/16076dff1a77ddaca93c4bccd4ec4521\n */\nexport default Image.extend({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      contentTypes: /^image\\/(jpe?g|png|svg|webp)$/i,\n      uploadImagesPath: null,\n      uploadDialogSelector: null\n    };\n  },\n\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      width: { default: null }\n    };\n  },\n\n  addCommands() {\n    const i18n = getDictionary(\"editor.extensions.image\");\n    const uploadDialog = createImageUploadDialog(this.editor, this.options);\n\n    return {\n      ...this.parent?.(),\n      imageDialog: () => async ({ dispatch }) => {\n        if (dispatch) {\n          let { src, alt, width } = this.editor.getAttributes(\"image\");\n\n          this.editor.commands.toggleDialog(true);\n          const dialogState = await uploadDialog.toggle({ src, alt }, {\n            inputLabel: i18n.altLabel,\n            uploadHandler: async (file) => uploadImage(file, this.options.uploadImagesPath)\n          });\n          this.editor.commands.toggleDialog(false);\n\n          if (dialogState !== \"save\") {\n            this.editor.commands.focus(null, { scrollIntoView: false });\n            return false;\n          }\n\n          if (uploadDialog.getValue(\"src\") !== src) {\n            // Reset the width to original width in case the image changed.\n            width = null;\n          }\n\n          src = uploadDialog.getValue(\"src\");\n          alt = uploadDialog.getValue(\"alt\");\n\n          return this.editor.chain().setImage({ src, alt, width }).focus(null, { scrollIntoView: false }).run();\n        }\n\n        return true;\n      }\n    }\n  },\n\n  addNodeView() {\n    return createNodeView(this);\n  },\n\n  parseHTML() {\n    return [{ tag: \"div[data-image] img[src]:not([src^='data:'])\" }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"div\",\n      { \"class\": \"editor-content-image\", \"data-image\": \"\" },\n      [\n        \"img\",\n        mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)\n      ]\n    ];\n  },\n\n  addProseMirrorPlugins() {\n    const editor = this.editor;\n    const { uploadImagesPath, contentTypes } = this.options;\n\n    const handleUploadedImages = (uploadedImages) => {\n      uploadedImages.forEach((imageData) => {\n        if (!imageData.url) {\n          return;\n        }\n\n        editor.commands.setImage({ src: imageData.url, alt: imageData.title });\n      });\n    }\n\n    return [\n      new Plugin({\n        props: {\n          handlePaste(view, event) {\n            const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            const images = filterImages(items, contentTypes);\n            if (images.length < 1) {\n              return false;\n            }\n\n            Promise.all(images.map((item) => uploadImage(item.getAsFile(), uploadImagesPath))).then((uploadedImages) => {\n              handleUploadedImages(uploadedImages);\n            });\n\n            return true;\n          },\n\n          handleDoubleClick() {\n            if (!editor.isActive(\"image\")) {\n              return false;\n            }\n\n            editor.chain().focus().imageDialog().run();\n            return true;\n          },\n\n          handleDOMEvents: {\n            drop(view, event) {\n              const position = view.posAtCoords({left: event.clientX, top: event.clientY});\n\n              const files = event?.dataTransfer?.files;\n              if (!files || files.length < 1) {\n                return;\n              }\n\n              const images = filterImages(files, contentTypes);\n              if (images.length < 1) {\n                return;\n              }\n\n              event.preventDefault();\n\n              // Make sure the image is dropped at the right place. Otherwise\n              // the image would appear at the current text selection position\n              // and always in the beginning of the content in case the editor\n              // did not have focus when the image was dropped.\n              editor.chain().focus().setTextSelection(position.pos).run();\n\n              Promise.all(images.map((image) => uploadImage(image, uploadImagesPath))).then((uploadedImages) => {\n                handleUploadedImages(uploadedImages);\n              });\n            }\n          }\n        }\n      })\n    ];\n  }\n});\n","import { DOMSerializer } from \"prosemirror-model\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\n\nconst createControl = (position, label) => {\n  const el = document.createElement(\"button\");\n  el.type = \"button\";\n  el.ariaLabel = label;\n  el.dataset.imageResizerControl = position;\n  return el;\n};\n\nconst createDimensionDisplay = () => {\n  const el = document.createElement(\"div\");\n  el.dataset.imageResizerDimensions = \"\";\n\n  const width = document.createElement(\"span\");\n  width.dataset.imageResizerDimension = \"width\";\n  width.dataset.imageResizerDimensionValue = \"\";\n\n  const height = document.createElement(\"span\");\n  height.dataset.imageResizerDimension = \"height\";\n  height.dataset.imageResizerDimensionValue = \"\";\n\n  el.append(width);\n  el.append(\"×\");\n  el.append(height);\n\n  return { wrapper: el, width, height };\n};\n\n/**\n * Wraps the editor element around the resizable element and implements the\n * resizer functionality.\n *\n * @param {Object} self The node extension to create the view for\n * @returns {Function} The custom node view callback to pass on to TipTap\n */\nexport default (self) => {\n  const i18nResize = getDictionary(\"editor.extensions.image.nodeView.resizer\");\n  const createResizeControl = (position) => {\n    const label = i18nResize[\"control.resize\"];\n    const positionLabel = i18nResize[`position.${position.replace(/-(\\w)/, (da, ch) => ch.toUpperCase())}`];\n\n    return createControl(position, label.replace(\"%position%\", positionLabel));\n  }\n\n  return ({ editor, node, getPos }) => {\n    const resizer = document.createElement(\"div\");\n    resizer.dataset.imageResizerWrapper = \"\";\n    resizer.append(createResizeControl(\"top-left\"));\n    resizer.append(createResizeControl(\"top-right\"));\n    resizer.append(createResizeControl(\"bottom-left\"));\n    resizer.append(createResizeControl(\"bottom-right\"));\n\n    const dimensions = createDimensionDisplay();\n    resizer.append(dimensions.wrapper);\n\n    const contentDOM = DOMSerializer.fromSchema(node.type.schema).serializeNode(node);\n    resizer.append(contentDOM);\n\n    const img = contentDOM.querySelector(\"img\");\n    let activeResizeControl = null,\n        currentHeight = null,\n        currentSrc = node.attrs.src,\n        currentWidth = null,\n        naturalHeight = img.naturalHeight,\n        naturalWidth = img.naturalWidth,\n        originalWidth = null,\n        resizeStartPosition = null;\n\n    // Used to reliably get the image width so that it is not reported as zero\n    // in case the original image element has not finished loading yet.\n    const tmpImg = document.createElement(\"img\");\n    const { width: givenWidth } = node.attrs;\n    tmpImg.onload = () => {\n      naturalWidth = tmpImg.naturalWidth;\n      naturalHeight = tmpImg.naturalHeight;\n\n      // Set currentWidth and currentHeight\n      if (givenWidth === null) {\n        currentWidth = naturalWidth;\n        currentHeight = naturalHeight;\n      } else {\n        currentWidth = givenWidth;\n        currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n      }\n\n      // Force node update in order to set the initial dimensions\n      [{ ...node.attrs, width: 1 }, node.attrs].forEach((newAttrs) => {\n        // The `setTimeout` below is to push the node updates to the next JS\n        // event loop so that we are not triggering a change in the element\n        // before it is created as would happen e.g. during the Jest tests.\n        setTimeout(() => {\n          editor.view.dispatch(\n            editor.view.state.tr.setNodeMarkup(getPos(), self.type, newAttrs)\n          );\n        }, 0);\n      });\n    }\n    tmpImg.src = img.src;\n\n    const getEventPagePosition = (ev, device) => {\n      if (device === \"touch\") {\n        const originalEv = ev.originalEvent;\n        const touches = ev.touches || ev.changedTouches || originalEv.touches || originalEv.changedTouches;\n        if (!touches) {\n          return { xPos: null, yPos: null };\n        }\n        const touch = touches[0];\n        return { xPos: touch.pageX, yPos: touch.pageY };\n      }\n      return { xPos: ev.clientX, yPos: ev.clientY };\n    };\n    const handleMove = (ev, device) => {\n      let { xPos } = getEventPagePosition(ev, device);\n      let diff = resizeStartPosition - xPos;\n      if (activeResizeControl.match(/-left$/)) {\n        diff *= -1;\n      }\n\n      currentWidth = Math.round(originalWidth * (1 - diff / originalWidth));\n      if (currentWidth < 100) {\n        currentWidth = 100;\n      } else if (currentWidth >= naturalWidth) {\n        currentWidth = naturalWidth;\n      }\n      currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n\n\n      let width = currentWidth;\n      if (width >= naturalWidth) {\n        width = null;\n      }\n      editor.commands.updateAttributes(\"image\", { width });\n    };\n    const handleMouseMove = (ev) => handleMove(ev, \"mouse\");\n    const handleTouchMove = (ev) => handleMove(ev, \"touch\");\n    const handleEnd = () => {\n      activeResizeControl = resizeStartPosition = null;\n\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleEnd);\n      document.removeEventListener(\"touchend\", handleEnd);\n    };\n    resizer.querySelectorAll(\"[data-image-resizer-control]\").forEach((ctrl) => {\n      const handleStart = (ev, device) => {\n        // Only allow mouse events to start the resize on the primary button\n        // click.\n        if (device === \"mouse\" && ev.button !== 0) {\n          return;\n        }\n        if (!editor.isEditable || activeResizeControl) {\n          return;\n        }\n\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"touchmove\", handleTouchMove);\n        document.addEventListener(\"mouseup\", handleEnd);\n        document.addEventListener(\"touchend\", handleEnd);\n\n        ev.preventDefault();\n        activeResizeControl = ctrl.dataset.imageResizerControl;\n        originalWidth = editor.getAttributes(\"image\").width || naturalWidth;\n\n        resizeStartPosition = getEventPagePosition(ev, device).xPos;\n      };\n      const handleMouseStart = (ev) => handleStart(ev, \"mouse\");\n      const handleTouchStart = (ev) => handleStart(ev, \"touch\");\n\n      ctrl.addEventListener(\"mousedown\", handleMouseStart);\n      ctrl.addEventListener(\"touchstart\", handleTouchStart);\n    });\n\n    const dom = document.createElement(\"div\");\n    dom.dataset.imageResizer = \"\";\n    dom.append(resizer);\n\n    return {\n      dom,\n      contentDOM,\n      update: (updatedNode) => {\n        if (updatedNode.type !== self.type) {\n          return false;\n        }\n\n        const { alt, src, title, width } = updatedNode.attrs;\n\n        // We set the value through an attribute change here because otherwise\n        // we would trigger a mutation in the DOM which causes the update method\n        // to be called recursively.\n        dimensions.width.dataset.imageResizerDimensionValue = currentWidth;\n        dimensions.height.dataset.imageResizerDimensionValue = currentHeight;\n\n        img.alt = alt;\n        if (currentSrc !== src) {\n          img.src = src;\n          currentSrc = src;\n        }\n        if (title) {\n          img.title = title;\n        } else {\n          img.removeAttribute(\"title\");\n        }\n        if (width) {\n          img.width = width;\n        } else {\n          img.removeAttribute(\"width\");\n        }\n\n        return true;\n      }\n    };\n  };\n};\n","import { Extension } from \"@tiptap/core\";\n\n// The node types for which indentation is allowed\nconst allowedNodeTypes = [\"heading\", \"paragraph\"];\n\n/**\n * Helper method to check whether one of the allowed type nodes is currently\n * active where the indentation can be performed on.\n *\n * @param {Object} editor The editor instance.\n * @returns {Boolean} A boolean indicating if an allowed type node is active\n */\nconst allowedNodeActive = (editor) => allowedNodeTypes.some((type) => editor.isActive(type));\n\n/**\n * Finds the closest allowed type node from the given position. Traversese the\n * document depth upwards to search through all the node parents.\n *\n * @param {Object} position The position where to look for\n * @returns {Node|null} The allowed node or null if no allowed node is found\n */\nconst closestAllowedNode = (position) => {\n  let depth = position.depth;\n  while (depth > 0) {\n    const node = position.node(depth);\n    if (allowedNodeTypes.some((type) => node.type.name === type)) {\n      return node;\n    }\n    depth -= 1;\n  }\n  return null;\n}\n\n/**\n * Indent extension for the Tiptap editor.\n *\n * Originally based on the following MIT licensed code:\n * https://github.com/ueberdosis/tiptap/issues/1036#issuecomment-1000983233\n * https://github.com/evanfuture/tiptaptop-extension-indent\n *\n * License as specified at:\n * https://github.com/evanfuture/tiptaptop-extension-indent\n *\n * The code has been simplified and modified to fit better the needs of Decidim.\n *\n * Authors/Credits: Jeet Mandaliya (@sereneinserenade),\n *   Evan Payne (@evanfuture), @danline, YukiYama (@yuyuyukie)\n */\nexport default Extension.create({\n  name: \"indent\",\n\n  addOptions() {\n    return {\n      minIndentLevel: 0,\n      maxIndentLevel: 10,\n      HTMLAttributes: {}\n    };\n  },\n\n  addGlobalAttributes() {\n    const defaultIndentLevel = 0;\n\n    return [\n      {\n        types: allowedNodeTypes,\n        attributes: {\n          indent: {\n            default: defaultIndentLevel,\n            renderHTML: (attributes) => {\n              if (attributes.indent < 1) {\n                return {};\n              }\n\n              return { class: `editor-indent-${attributes.indent}` };\n            },\n            parseHTML: (element) => {\n              // The \"ql\" prefix here is to maintain backwards compatibility\n              // with the old editor. The new prefix is editor-indent-X where X\n              // is the current indentation level.\n              const regexp = /^(editor|ql)-indent-([0-9]+)/;\n              const indentClass = Array.from(element.classList).find((cls) => regexp.test(cls))\n              if (!indentClass) {\n                return defaultIndentLevel;\n              }\n              return parseInt(indentClass.match(regexp)[2], 10);\n            }\n          }\n        }\n      }\n    ];\n  },\n\n  addCommands() {\n    const updateIndent = (modifier, { editor, state, dispatch, commands }) => {\n      if (!allowedNodeActive(editor)) {\n        return false;\n      }\n\n      const node = closestAllowedNode(state.selection.$head);\n      if (node === null) {\n        return false;\n      }\n\n      const indent = node.attrs.indent + modifier;\n      if (indent < this.options.minIndentLevel || indent > this.options.maxIndentLevel) {\n        return false;\n      }\n\n      if (dispatch) {\n        return commands.updateAttributes(node.type.name, { indent });\n      }\n\n      return true;\n    }\n\n    return {\n      indent: () => ({ editor, state, commands, dispatch }) => {\n        if (editor.isActive(\"listItem\")) {\n          if (dispatch) {\n            return commands.sinkListItem(\"listItem\");\n          }\n          return true;\n        }\n\n        return updateIndent(1, { editor, state, dispatch, commands})\n      },\n      outdent: () => ({ editor, state, commands, dispatch }) => {\n        if (editor.isActive(\"listItem\")) {\n          // When the list item depth is at 3 it means that the list is at the\n          // top level because of the following structure:\n          // <ul><!-- depth: 1 -->\n          //   <li><!-- depth: 2 -->\n          //     <p>Content</p><!-- depth: 3 -->\n          //   </li>\n          // </ul>\n          //\n          // We do not allow outdent at the top level of the list.\n          if (state.selection.$head.depth === 3) {\n            return false;\n          }\n          if (dispatch) {\n            return commands.liftListItem(\"listItem\");\n          }\n          return true;\n        }\n\n        return updateIndent(-1, { editor, state, dispatch, commands})\n      }\n    }\n  },\n\n  addKeyboardShortcuts() {\n    const indent = () => {\n      if (!this.editor.can().indent()) {\n        return false;\n      }\n\n      return this.editor.commands.indent();\n    };\n    const outdent = () => {\n      if (!this.editor.can().outdent()) {\n        return false;\n      }\n\n      return this.editor.commands.outdent();\n    };\n\n    return {\n      Tab: indent,\n      \"Shift-Tab\": outdent,\n      Backspace: () => {\n        if (this.editor.isActive(\"listItem\")) {\n          return false;\n        }\n\n        // With the backspace we only allow outdent when the cursor is at the\n        // beginning of the line.\n        if (this.editor.state.selection.$head.parentOffset > 0) {\n          return false;\n        }\n\n        return outdent();\n      },\n      \"Mod-]\": indent,\n      \"Mod-[\": outdent\n    };\n  }\n});\n","import { PluginKey } from \"prosemirror-state\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\nimport BubbleMenu from \"src/decidim/editor/common/bubble_menu\";\n\nclass LinkBubbleMenu extends BubbleMenu {\n  shouldDisplay() {\n    return this.editor.isActive(\"link\");\n  }\n\n  display() {\n    const { href } = this.editor.getAttributes(\"link\");\n    this.element.querySelector(\"[data-linkbubble-value]\").textContent = href;\n  }\n\n  handleAction(action) {\n    if (action === \"remove\") {\n      this.editor.chain().focus(null, { scrollIntoView: false }).unsetLink().run();\n    } else {\n      this.editor.commands.linkDialog();\n    }\n  }\n}\n\nconst createElement = () => {\n  const i18n = getDictionary(\"editor.extensions.link.bubbleMenu\");\n\n  const element = document.createElement(\"div\");\n  element.dataset.linkbubble = \"\";\n  element.innerHTML = `\n    <span data-linkbubble-content>\n      ${i18n.url}:\n      <span data-linkbubble-value></span>\n    </span>\n    <span data-linkbubble-actions>\n      <button type=\"button\" data-action=\"edit\">${i18n.edit}</button>\n      <button type=\"button\" data-action=\"remove\">${i18n.remove}</button>\n    </span>\n  `;\n\n  return element;\n};\n\nexport default (editor) => {\n  return new LinkBubbleMenu({\n    editor,\n    element: createElement(),\n    pluginKey: new PluginKey(\"LinkBubble\")\n  });\n};\n","import Link from \"@tiptap/extension-link\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\nimport InputDialog from \"src/decidim/editor/common/input_dialog\";\nimport createBubbleMenu from \"src/decidim/editor/extensions/link/bubble_menu\";\n\nexport default Link.extend({\n  addStorage() {\n    return { bubbleMenu: null };\n  },\n\n  onCreate() {\n    this.parent?.();\n\n    this.storage.bubbleMenu = createBubbleMenu(this.editor);\n  },\n\n  onDestroy() {\n    this.parent?.();\n\n    this.storage.bubbleMenu.destroy();\n    this.storage.bubbleMenu = null;\n  },\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      allowTargetControl: false,\n      HTMLAttributes: {\n        target: \"_blank\",\n        class: null\n      }\n    }\n  },\n\n  addCommands() {\n    const i18n = getDictionary(\"editor.extensions.link\");\n\n    return {\n      ...this.parent?.(),\n\n      toggleLinkBubble: () => ({ dispatch }) => {\n        if (dispatch) {\n          if (this.editor.isActive(\"link\")) {\n            this.storage.bubbleMenu.show();\n            return true;\n          }\n\n          this.storage.bubbleMenu.hide();\n          return false;\n        }\n        return this.editor.isActive(\"link\");\n      },\n\n      linkDialog: () => async ({ dispatch, commands }) => {\n        if (dispatch) {\n          // If the cursor is within the link but the link is not selected, the\n          // link would not be correctly updated. Also if only a part of the\n          // link is selected, the link would be split to separate links, only\n          // the current selection getting the updated link URL.\n          commands.extendMarkRange(\"link\");\n\n          this.storage.bubbleMenu.hide();\n\n          const { allowTargetControl } = this.options;\n\n          let { href, target } = this.editor.getAttributes(\"link\");\n\n          const inputs = { href: { type: \"text\", label: i18n.hrefLabel } };\n          if (allowTargetControl) {\n            inputs.target = {\n              type: \"select\",\n              label: i18n.targetLabel,\n              options: [\n                { value: \"\", label: i18n[\"targets.default\"] },\n                { value: \"_blank\", label: i18n[\"targets.blank\"] }\n              ]\n            }\n          }\n\n          const linkDialog = new InputDialog(this.editor, { inputs });\n          const dialogState = await linkDialog.toggle({ href, target });\n          href = linkDialog.getValue(\"href\");\n          target = linkDialog.getValue(\"target\");\n          if (!allowTargetControl) {\n            target = \"_blank\";\n          } else if (!target || target.length < 1) {\n            target = null;\n          }\n\n          if (dialogState !== \"save\") {\n            this.editor.chain().focus(null, { scrollIntoView: false }).toggleLinkBubble().run();\n            return false;\n          }\n\n          if (!href || href.trim().length < 1) {\n            return this.editor.chain().focus(null, { scrollIntoView: false }).unsetLink().run();\n          }\n\n          return this.editor.chain().focus(null, { scrollIntoView: false }).setLink({ href, target }).toggleLinkBubble().run();\n        }\n\n        return true;\n      }\n    }\n  },\n\n  addProseMirrorPlugins() {\n    const editor = this.editor;\n\n    return [\n      ...(this.parent?.() || {}),\n      new Plugin({\n        props: {\n          handleDoubleClick() {\n            if (!editor.isActive(\"link\")) {\n              return false;\n            }\n\n            editor.chain().focus().linkDialog().run();\n            return true;\n          }\n        }\n      })\n    ];\n  }\n});\n","import Mention from \"@tiptap/extension-mention\";\n\nimport { createSuggestionRenderer, createNodeView } from \"src/decidim/editor/common/suggestion\";\n\nconst searchUsers = async (queryText) => {\n  const query = `{\n    users(filter: { wildcard: \"${queryText}\" }) {\n      nickname,\n      name,\n      avatarUrl,\n      __typename,\n      ...on UserGroup { membersCount }\n    }\n  }`;\n\n\n  return fetch(\"/api\", {\n    method: \"POST\",\n    cache: \"no-cache\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ query })\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(\"Could not retrieve data\");\n  }).then((json) => (json.data.users || []));\n};\n\nexport default Mention.extend({\n  addOptions() {\n    const parentOptions = this.parent?.();\n\n    return {\n      ...parentOptions,\n      renderLabel({ node }) {\n        // The labels are formed based on the nicknames returned by the API\n        // which already contain the suggestion character, so there is no need\n        // to display it twice.\n        return `${node.attrs.label ?? node.attrs.id}`\n      },\n      suggestion: {\n        ...parentOptions?.suggestion,\n        allowSpaces: true,\n        items: async ({ query }) => {\n          if (query.length < 2) {\n            return [];\n          }\n\n          const data = await searchUsers(query);\n          const sorted = data.sort((user) => user.nickname.slice(1));\n          return sorted.slice(0, 5);\n        },\n        render: createSuggestionRenderer(this, {\n          itemConverter: (user) => {\n            return { id: user.nickname, label: `${user.nickname} (${user.name})` }\n          }\n        })\n      }\n    };\n  },\n\n  addNodeView() {\n    return createNodeView(this);\n  }\n});\n","import { mergeAttributes } from \"@tiptap/core\";\nimport OrderedList from \"@tiptap/extension-ordered-list\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport transformPastedHTML from \"src/decidim/editor/utilities/paste_transform\";\n\nconst allowedListTypes = [\"a\", \"A\", \"i\", \"I\"];\n\nconst covertListStyleToType = (style) => {\n  switch (style) {\n  case \"lower-alpha\":\n  case \"lower-latin\":\n    return \"a\";\n  case \"upper-alpha\":\n  case \"upper-latin\":\n    return \"A\";\n  case \"lower-roman\":\n    return \"i\";\n  case \"upper-roman\":\n    return \"I\";\n  default:\n    return \"1\";\n  }\n};\n\n/**\n * This extension is customized in order to support the different styles of\n * ordered lists, such as the following.\n *\n * type \"a\":\n *   a) List item 1\n *   b) List item 2\n *   c) List item 3\n *\n * type \"A\":\n *   A) List item 1\n *   B) List item 2\n *   C) List item 3\n *\n * type \"i\":\n *   i) List item 1\n *   ii) List item 2\n *   iii) List item 3\n *\n * type \"I\":\n *   I) List item 1\n *   II) List item 2\n *   III) List item 3\n *\n * See: https://github.com/ueberdosis/tiptap/issues/3726\n */\nexport default OrderedList.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      type: {\n        default: null,\n        parseHTML: (element) => {\n          let type = element.getAttribute(\"type\");\n          if (allowedListTypes.includes(type)) {\n            return type;\n          }\n\n          // Google Docs\n          const listItem = element.querySelector(\"li\");\n          if (listItem) {\n            type = covertListStyleToType(listItem.style.listStyleType);\n            if (allowedListTypes.includes(type)) {\n              return type;\n            }\n          }\n\n          // Office 365\n          type = covertListStyleToType(element.style.listStyleType);\n          if (allowedListTypes.includes(type)) {\n            return type;\n          }\n\n          return null;\n        }\n      }\n    };\n  },\n\n  /**\n   * Overridden render method to add the `data-type` attribute for the typed\n   * ordered lists as a workaround to style these lists properly. The following\n   * issue with the CSS attribute selectors for the `type` attribute prevents\n   * styling them properly otherwise: https://stackoverflow.com/q/53099708.\n   *\n   * The issue cannot be solved without this until the case sensitivity selector\n   * is implemented by browsers and widely available:\n   * https://caniuse.com/mdn-css_selectors_attribute_case_sensitive_modifier\n   *\n   * This has been already agreed by the CSS working group as per:\n   * https://github.com/w3c/csswg-drafts/commit/de57526\n   *\n   * For further details, see:\n   * https://github.com/tailwindlabs/tailwindcss-typography/issues/296\n   *\n   * @param {Object} attributes The attributes object containing the\n   *   `HTMLAttributes` key for the attributes to be rendered\n   * @returns {Array} The node definition array as defined by TipTap\n   */\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    let attrs = null;\n    if (start === 1) {\n      attrs = mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart);\n    } else {\n      attrs = mergeAttributes(this.options.HTMLAttributes, HTMLAttributes);\n    }\n\n    if (attrs.type) {\n      attrs[\"data-type\"] ??= attrs.type;\n    }\n\n    return [\"ol\", attrs, 0]\n  },\n\n  addCommands() {\n    return {\n      ...this.parent?.(),\n      setOrderedListType: (type) => ({ commands, dispatch }) => {\n        const listActive = this.editor.isActive(\"orderedList\");\n        if (dispatch && listActive) {\n          return commands.updateAttributes(\"orderedList\", { type });\n        }\n        return listActive;\n      }\n    };\n  },\n\n  addKeyboardShortcuts() {\n    const currentType = () => {\n      return this.editor.getAttributes(\"orderedList\").type;\n    };\n    const determineType = (type, direction) => {\n      let idx = allowedListTypes.indexOf(type) + direction;\n      if (idx === -2) {\n        idx = allowedListTypes.length - 1;\n      } else if (idx < 0 || idx >= allowedListTypes.length) {\n        return null;\n      }\n      return allowedListTypes[idx];\n    };\n    const listTypeChange = (direction) => {\n      if (!this.editor.isActive(\"orderedList\")) {\n        return false;\n      }\n\n      const type = determineType(currentType(), direction);\n      if (!this.editor.can().setOrderedListType(type)) {\n        return false;\n      }\n\n      return this.editor.commands.setOrderedListType(type);\n    }\n\n    return {\n      ...this.parent?.(),\n      \"Alt-Shift-ArrowUp\": () => listTypeChange(-1),\n      \"Alt-Shift-ArrowDown\": () => listTypeChange(1)\n    }\n  },\n\n  /**\n   * Adds a plugin that modifies the pasted HTML before it is passed to the\n   * editor to fix some problems in the pasted content structure from different\n   * online and desktop editors.\n   *\n   * See: https://github.com/ueberdosis/tiptap/issues/3751\n   *\n   * @returns {Array} The ProseMirror plugins provided by this extension\n   */\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        props: {\n          transformPastedHTML(html) {\n            return transformPastedHTML(html);\n          }\n        }\n      })\n    ];\n  }\n});\n","import { Node, nodePasteRule, mergeAttributes } from \"@tiptap/core\";\nimport { Plugin } from \"prosemirror-state\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\nimport InputDialog from \"src/decidim/editor/common/input_dialog\";\n\nconst YOUTUBE_REGEX = /^(https?:\\/\\/)?(www\\.|music\\.)?(youtube\\.com|youtu\\.be)(.+)?$/;\nconst YOUTUBE_REGEX_GLOBAL = /^(https?:\\/\\/)?(www\\.|music\\.)?(youtube\\.com|youtu\\.be)(.+)?$/g;\nconst VIMEO_REGEX = /^(https?:\\/\\/)?(www\\.|player\\.)?(vimeo\\.com)(.+)?$/;\nconst VIMEO_REGEX_GLOBAL = /^(https?:\\/\\/)?(www\\.|player\\.)?(vimeo\\.com)(.+)?$/g;\n\nconst isValidYoutubeUrl = (url) => {\n  return url.match(YOUTUBE_REGEX);\n}\n\nconst isValidVimeoUrl = (url) => {\n  return url.match(VIMEO_REGEX);\n};\n\nconst getEmbedUrlFromYoutubeUrl = (options) => {\n  const embedUrl = \"https://www.youtube-nocookie.com/embed/\";\n\n  const { url } = options;\n\n  // if is already an embed url, return it\n  if (url.includes(\"/embed/\")) {\n    return url;\n  }\n\n  // if is a youtu.be url, get the id after the /\n  if (url.includes(\"youtu.be\")) {\n    const id = url.split(\"/\").pop();\n\n    if (!id) {\n      return null;\n    }\n    return `${embedUrl}${id}`;\n  }\n\n  const videoIdRegex = /v=([-\\w]+)/gm;\n  const matches = videoIdRegex.exec(url);\n\n  if (!matches || !matches[1]) {\n    return null;\n  }\n\n  let outputUrl = `${embedUrl}${matches[1]}`;\n\n  const params = {\n    ccLoadPolicy: 1,\n    modestbranding: 1\n  };\n\n  const urlParams = {};\n  Object.keys(params).forEach((key) => {\n    const urlKey = key.replace(/[A-Z]/g, (char) => `_${char.toLowerCase()}`);\n    urlParams[urlKey] = params[key];\n  });\n\n  return `${outputUrl}?${new URLSearchParams(urlParams)}`;\n}\n\nconst getEmbedUrlFromVimeoUrl = (options) => {\n  const embedUrl = \"https://player.vimeo.com/video/\";\n\n  const { url } = options;\n\n  const cleanUrl = url.split(\"?\").shift();\n  const id = cleanUrl.split(\"/\").pop();\n\n  return `${embedUrl}${id}`;\n}\n\nconst getEmbedUrlFromVideoUrl = (options) => {\n  const { url } = options;\n\n  if (isValidYoutubeUrl(url)) {\n    return getEmbedUrlFromYoutubeUrl(options);\n  } else if (isValidVimeoUrl(url)) {\n    return getEmbedUrlFromVimeoUrl(options);\n  }\n\n  return url;\n}\n\n/**\n * Video embed extension for the Tiptap editor.\n *\n * Based on the original `@tiptap/extension-youtube` extension with support to\n * other embedding services than only YouTube.\n */\nexport default Node.create({\n  name: \"videoEmbed\",\n  draggable: true,\n\n  addOptions() {\n    return {\n      height: null,\n      width: null,\n      inline: false\n    }\n  },\n\n  inline() {\n    return this.options.inline;\n  },\n\n  group() {\n    if (this.options.inline) {\n      return \"inline\";\n    }\n    return \"block\";\n  },\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n        parseHTML: (element) => {\n          const wrapper = element?.parentElement?.parentElement;\n          const embedUrl = wrapper?.dataset?.videoEmbed;\n          if (embedUrl && embedUrl.length > 0) {\n            return embedUrl;\n          }\n          return element.src;\n        }\n      },\n      title: { default: null },\n      width: { default: this.options.width },\n      height: { default: this.options.height },\n      frameborder: { default: 0 },\n      allowfullscreen: { default: true }\n    };\n  },\n\n  parseHTML() {\n    return [{ tag: \"div[data-video-embed] div iframe\" }];\n  },\n\n  addCommands() {\n    const i18n = getDictionary(\"editor.extensions.videoEmbed\");\n\n    return {\n      setVideo: (options) => ({ commands }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options\n        });\n      },\n\n      videoEmbedDialog: () => async ({ dispatch }) => {\n        if (dispatch) {\n          const videoDialog = new InputDialog(this.editor, {\n            inputs: {\n              src: { type: \"text\", label: i18n.urlLabel },\n              title: { type: \"text\", label: i18n.titleLabel }\n            }\n          });\n          let { src, title } = this.editor.getAttributes(\"videoEmbed\");\n\n          const dialogState = await videoDialog.toggle({ src, title });\n          if (dialogState !== \"save\") {\n            return false;\n          }\n\n          src = videoDialog.getValue(\"src\");\n          title = videoDialog.getValue(\"title\");\n          if (!src || src.length < 1) {\n            this.editor.commands.focus(null, { scrollIntoView: false });\n            return false;\n          }\n\n          return this.editor.chain().setVideo({ src, title }).focus(null, { scrollIntoView: false }).run();\n        }\n\n        return true;\n      }\n    }\n  },\n\n  addPasteRules() {\n    return [\n      nodePasteRule({\n        find: YOUTUBE_REGEX_GLOBAL,\n        type: this.type,\n        getAttributes: (match) => {\n          return { src: match.input, title: \"\" };\n        }\n      }),\n      nodePasteRule({\n        find: VIMEO_REGEX_GLOBAL,\n        type: this.type,\n        getAttributes: (match) => {\n          return { src: match.input, title: \"\" };\n        }\n      })\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { src } = HTMLAttributes;\n    HTMLAttributes.src = getEmbedUrlFromVideoUrl({ url: src  });\n\n    return [\n      \"div\",\n      { \"class\": \"editor-content-videoEmbed\", \"data-video-embed\": src },\n      [\n        \"div\",\n        {},\n        [\n          \"iframe\",\n          mergeAttributes(\n            {\n              width: this.options.width,\n              height: this.options.height\n            },\n            HTMLAttributes\n          )\n        ]\n      ]\n    ];\n  },\n\n  addProseMirrorPlugins() {\n    const editor = this.editor;\n\n    return [\n      new Plugin({\n        props: {\n          handleDoubleClick() {\n            if (!editor.isActive(\"videoEmbed\")) {\n              return false;\n            }\n\n            editor.chain().focus().videoEmbedDialog().run();\n            return true;\n          }\n        }\n      })\n    ];\n  }\n})\n","import { Editor } from \"@tiptap/core\"; \n\nimport DecidimKit from \"src/decidim/editor/extensions/decidim_kit\";\n\nimport createEditorToolbar from \"src/decidim/editor/toolbar\";\nimport { uniqueId } from \"src/decidim/editor/common/helpers\";\n\n/**\n * Creates a new rich text editor instance.\n *\n * @param {HTMLElement} container The element that contains the editor.\n * @return {Editor} The rich text editor instance. \n */\nexport default function createEditor(container) {\n  const input = container.parentElement.querySelector(\"input[type=hidden]\");\n  const label = container.parentElement.querySelector(\"label\");\n  const editorContainer = container.querySelector(\".editor-input\");\n\n  const editorAttributes = { role: \"textbox\", \"aria-multiline\": true };\n  if (label) {\n    const labelId = uniqueId(\"editorlabel\");\n    label.setAttribute(\"id\", labelId);\n    editorAttributes[\"aria-labelledby\"] = labelId;\n  }\n\n  /**\n   * Toolbar features can be one of:\n   *\n   * - basic = only basic controls without headings\n   * - content = basic + headings\n   * - full = basic + headings + image + video\n   */\n  const features = container.dataset?.toolbar || \"basic\";\n  const options = JSON.parse(container.dataset.options);\n  const { context, contentTypes } = options;\n\n  const decidimOptions = {};\n\n  if (context !== \"participant\") {\n    decidimOptions.link = { allowTargetControl: true };\n  }\n\n  if (input.hasAttribute(\"maxlength\")) {\n    decidimOptions.characterCount = { limit: parseInt(input.getAttribute(\"maxlength\"), 10) };\n  }\n\n  if (features === \"basic\") {\n    decidimOptions.heading = false;\n  }\n\n  if (features === \"full\") {\n    decidimOptions.videoEmbed = true;\n\n    const { uploadImagesPath, uploadDialogSelector } = options;\n    decidimOptions.image = {\n      uploadDialogSelector,\n      contentTypes: contentTypes.image,\n      uploadImagesPath\n    };\n  }\n\n  if (container.classList.contains(\"js-hashtags\")) {\n    decidimOptions.hashtag = true;\n  }\n  if (container.classList.contains(\"js-mentions\")) {\n    decidimOptions.mention = true;\n  }\n  if (container.classList.contains(\"js-emojis\")) {\n    decidimOptions.emoji = true;\n  }\n\n  const editor = new Editor({\n    element: editorContainer,\n    editorProps: { attributes: editorAttributes },\n    content: input.value,\n    editable: !input.disabled,\n    extensions: [DecidimKit.configure(decidimOptions)]\n  });\n\n  const toolbar = createEditorToolbar(editor);\n  container.insertBefore(toolbar, editorContainer);\n\n  editor.on(\"update\", () => (input.value = editor.getHTML()));\n\n  return editor;\n}\n","import { getDictionary } from \"src/decidim/i18n\";\nimport html from \"src/decidim/editor/utilities/html\";\n\nimport iconsUrl from \"images/decidim/remixicon.symbol.svg\";\n\nconst createIcon = (iconName) => {\n  return `<svg class=\"editor-toolbar-icon\" role=\"img\" aria-hidden=\"true\">\n    <use href=\"${iconsUrl}#ri-${iconName}\" />\n  </svg>`;\n};\n\nconst createEditorToolbarGroup = () => {\n  return html(\"div\").dom((el) => el.classList.add(\"editor-toolbar-group\"));\n};\n\nconst createEditorToolbarToggle = (editor, { type, label, icon, action, activatable = true }) => {\n  return html(\"button\").dom((ctrl) => {\n    ctrl.classList.add(\"editor-toolbar-control\");\n    ctrl.dataset.editorType = type;\n    if (activatable) {\n      ctrl.dataset.editorSelectionType = type;\n    }\n    ctrl.type = \"button\";\n    ctrl.ariaLabel = label;\n    ctrl.title = label;\n    ctrl.innerHTML = createIcon(icon);\n    ctrl.addEventListener(\"click\", (ev) => {\n      ev.preventDefault();\n      editor.commands.focus();\n      action();\n    })\n  });\n};\n\nconst createEditorToolbarSelect = (editor, { type, label, options, action, activatable = true }) => {\n  return html(\"select\").dom((ctrl) => {\n    ctrl.classList.add(\"editor-toolbar-control\", \"!pr-8\");\n    ctrl.dataset.editorType = type;\n    if (activatable) {\n      ctrl.dataset.editorSelectionType = type;\n    }\n    ctrl.ariaLabel = label;\n    ctrl.title = label;\n    options.forEach(({ label: optionLabel, value }) => {\n      const option = document.createElement(\"option\");\n      option.setAttribute(\"value\", value);\n      option.textContent = optionLabel;\n      ctrl.appendChild(option);\n    });\n    ctrl.addEventListener(\"change\", () => {\n      editor.commands.focus();\n      action(ctrl.value);\n    });\n  })\n};\n\n/**\n * Creates the editor toolbar for the given editor instance.\n *\n * @param {Editor} editor An instance of the rich text editor.\n * @returns {HTMLElement} The toolbar element\n */\nexport default function createEditorToolbar(editor) {\n  const i18n = getDictionary(\"editor.toolbar\");\n\n  const supported = { nodes: [], marks: [], extensions: [] };\n  editor.extensionManager.extensions.forEach((ext) => {\n    if (ext.type === \"node\") {\n      supported.nodes.push(ext.name);\n    } else if (ext.type === \"mark\") {\n      supported.marks.push(ext.name);\n    } else if (ext.type === \"extension\") {\n      supported.extensions.push(ext.name);\n    }\n  });\n\n  // Create the toolbar element\n  const toolbar = html(\"div\").\n    dom((el) => el.classList.add(\"editor-toolbar\")).\n    append(\n      // Text style controls\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarSelect(editor, {\n          type: \"heading\",\n          label: i18n[\"control.heading\"],\n          options: [\n            { value: \"normal\", label: i18n[\"textStyle.normal\"] },\n            { value: 1, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 1) },\n            { value: 2, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 2) },\n            { value: 3, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 3) },\n            { value: 4, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 4) },\n            { value: 5, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 5) },\n            { value: 6, label: i18n[\"textStyle.heading\"].replace(\"%level%\", 6) },\n          ],\n          action: (value) => {\n            if (value === \"normal\") {\n              editor.commands.setParagraph();\n            } else {\n              editor.commands.toggleHeading({ level: parseInt(value, 10) });\n            }\n          }\n        }).render(supported.nodes.includes(\"heading\"))\n      )\n    ).\n    append(\n      // Basic styling controls\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"bold\",\n          icon: \"bold\",\n          label: i18n[\"control.bold\"],\n          action: () => editor.commands.toggleBold()\n        }).render(supported.marks.includes(\"bold\")),\n        createEditorToolbarToggle(editor, {\n          type: \"italic\",\n          icon: \"italic\",\n          label: i18n[\"control.italic\"],\n          action: () => editor.commands.toggleItalic()\n        }).render(supported.marks.includes(\"italic\")),\n        createEditorToolbarToggle(editor, {\n          type: \"underline\",\n          icon: \"underline\",\n          label: i18n[\"control.underline\"],\n          action: () => editor.commands.toggleUnderline()\n        }).render(supported.marks.includes(\"underline\")),\n        createEditorToolbarToggle(editor, {\n          type: \"hardBreak\",\n          icon: \"text-wrap\",\n          label: i18n[\"control.hardBreak\"],\n          activatable: false,\n          action: () => editor.commands.setHardBreak()\n        }).render(supported.nodes.includes(\"hardBreak\"))\n      )\n    ).\n    append(\n      // List controls\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"orderedList\",\n          icon: \"list-ordered\",\n          label: i18n[\"control.orderedList\"],\n          action: () => editor.commands.toggleOrderedList()\n        }).render(supported.nodes.includes(\"orderedList\")),\n        createEditorToolbarToggle(editor, {\n          type: \"bulletList\",\n          icon: \"list-unordered\",\n          label: i18n[\"control.bulletList\"],\n          action: () => editor.commands.toggleBulletList()\n        }).render(supported.nodes.includes(\"bulletList\"))\n      )\n    ).\n    append(\n      // Link and erase styles\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"link\",\n          icon: \"link\",\n          label: i18n[\"control.link\"],\n          action: () => editor.commands.linkDialog()\n        }).render(supported.marks.includes(\"link\")),\n        createEditorToolbarToggle(editor, {\n          type: \"common:eraseStyles\",\n          icon: \"eraser-line\",\n          label: i18n[\"control.common.eraseStyles\"],\n          activatable: false,\n          action: () => {\n            if (editor.isActive(\"link\") && editor.view.state.selection.empty) {\n              const originalPos = editor.view.state.selection.anchor;\n              editor.chain().focus().extendMarkRange(\"link\").unsetLink().setTextSelection(originalPos).run();\n            } else {\n              editor.chain().focus().clearNodes().unsetAllMarks().run();\n            }\n          }\n        }).render(\n          supported.nodes.includes(\"heading\") ||\n          supported.marks.includes(\"bold\") ||\n          supported.marks.includes(\"italic\") ||\n          supported.marks.includes(\"underline\") ||\n          supported.nodes.includes(\"hardBreak\") ||\n          supported.nodes.includes(\"orderedList\") ||\n          supported.nodes.includes(\"bulletList\") ||\n          supported.marks.includes(\"link\")\n        )\n      )\n    ).\n    append(\n      // Block styling\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"codeBlock\",\n          icon: \"code-line\",\n          label: i18n[\"control.codeBlock\"],\n          action: () => editor.commands.toggleCodeBlock()\n        }).render(supported.nodes.includes(\"codeBlock\")),\n        createEditorToolbarToggle(editor, {\n          type: \"blockquote\",\n          icon: \"double-quotes-l\",\n          label: i18n[\"control.blockquote\"],\n          action: () => editor.commands.toggleBlockquote()\n        }).render(supported.nodes.includes(\"blockquote\"))\n      )\n    ).\n    append(\n      // Indent and outdent\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"indent:indent\",\n          icon: \"indent-increase\",\n          label: i18n[\"control.indent.indent\"],\n          activatable: false,\n          action: () => editor.commands.indent()\n        }).render(supported.extensions.includes(\"indent\")),\n        createEditorToolbarToggle(editor, {\n          type: \"indent:outdent\",\n          icon: \"indent-decrease\",\n          label: i18n[\"control.indent.outdent\"],\n          activatable: false,\n          action: () => editor.commands.outdent()\n        }).render(supported.extensions.includes(\"indent\"))\n      )\n    ).\n    append(\n      // Multimedia\n      createEditorToolbarGroup(editor).append(\n        createEditorToolbarToggle(editor, {\n          type: \"videoEmbed\",\n          icon: \"video-line\",\n          label: i18n[\"control.videoEmbed\"],\n          action: () => editor.commands.videoEmbedDialog()\n        }).render(supported.nodes.includes(\"videoEmbed\")),\n        createEditorToolbarToggle(editor, {\n          type: \"image\",\n          icon: \"image-line\",\n          label: i18n[\"control.image\"],\n          action: () => editor.commands.imageDialog()\n        }).render(supported.nodes.includes(\"image\"))\n      )\n    ).\n    render()\n  ;\n\n  const selectionControls = toolbar.querySelectorAll(\".editor-toolbar-control[data-editor-selection-type]\");\n  const headingSelect = toolbar.querySelector(\".editor-toolbar-control[data-editor-type='heading']\");\n  const selectionUpdated = () => {\n    if (editor.isActive(\"heading\")) {\n      const { level } = editor.getAttributes(\"heading\");\n      headingSelect.value = `${level}`;\n    } else if (headingSelect) {\n      headingSelect.value = \"normal\";\n    }\n\n    selectionControls.forEach((ctrl) => {\n      if (editor.isActive(ctrl.dataset.editorSelectionType)) {\n        ctrl.classList.add(\"active\");\n      } else {\n        ctrl.classList.remove(\"active\");\n      }\n    });\n  }\n  editor.on(\"update\", selectionUpdated);\n  editor.on(\"selectionUpdate\", selectionUpdated);\n\n  return toolbar;\n};\n","export const fileNameToTitle = (fileName) => {\n  return fileName.split(\".\").slice(0, -1).join(\".\");\n};\n","/**\n * Calls the provided function and returns the proxy object after the call.\n *\n * @param {*} proxy The proxy object to return after the call.\n * @param {Function} callable The method to call.\n * @returns {*} The provided proxy object\n */\nconst proxyCall = (proxy, callable) => (...args) => {\n  callable(...args);\n  return proxy;\n}\n\n/**\n * Provides a HTML utility to control the HTML rendering more easily and add\n * support for conditional rendering.\n *\n * @param {String} tag The name of the HTML tag to be created.\n * @returns {Object} A proxy object to control the HTML rendering of the\n *   elements.\n */\nexport default (tag = \"div\") => {\n  const el = document.createElement(tag);\n\n  const proxy = {};\n  proxy.dom = proxyCall(proxy, (callback) => callback(el));\n  proxy.append = proxyCall(proxy, (element, ...rest) => {\n    if (rest.length > 0) {\n      proxy.append(element);\n      rest.forEach((subEl) => proxy.append(subEl));\n      return;\n    } else if (!element) {\n      return;\n    }\n\n    if (element instanceof Function) {\n      proxy.append(element());\n    } else if (element?.render instanceof Function) {\n      proxy.append(element.render());\n    } else if (element instanceof Node && element.childNodes.length > 0) {\n      el.appendChild(element);\n    }\n  });\n  proxy.render = (condition) => {\n    if (condition instanceof Function && !condition(el)) {\n      return null;\n    } else if (condition === false) {\n      return null;\n    }\n    return el;\n  };\n\n  return proxy;\n};\n","const parseMsoListStyles = (doc) => {\n  const style = doc.querySelector(\"style\")?.textContent;\n  if (!style) {\n    return {};\n  }\n\n  const listStyles = {};\n  [...style.matchAll(/@list\\s+(l\\d+:level\\d+)[\\s]+\\{([^}]+)\\}/g)].forEach((match) => {\n    const styleDefs = {};\n    match[2].replace(/[\\s]+/g, \"\").split(\";\").forEach((styleDef) => {\n      const [key, val] = styleDef.split(\":\");\n      styleDefs[key] = val;\n    });\n    listStyles[match[1]] = styleDefs;\n  });\n\n  return listStyles;\n};\n\nconst detectMsoList = (element) => {\n  const currentStyle = element.getAttribute(\"style\");\n  if (!currentStyle) {\n    return { type: null, level: 1 };\n  }\n  const listStyleMatch = currentStyle.match(/mso-list:(l\\d+)\\s(level\\d+)/);\n  if (listStyleMatch) {\n    const [, type, level] = listStyleMatch;\n    return { type, level: parseInt(level.match(/\\d/), 10) };\n  }\n  return { type: null, level: 1 };\n};\n\nconst getMsoListStyle = (type, level, styleDefs) => {\n  if (type === null) {\n    return {};\n  }\n\n  const typeStyle = styleDefs[type] || {};\n  const levelStyle = styleDefs[`${type}:level${level}`] || {};\n  return Object.assign(typeStyle, levelStyle);\n};\n\nconst converMsoListStyleToHtml = (listStyle) => {\n  let tag = \"ol\",\n      type = null;\n  switch (listStyle[\"mso-level-number-format\"]) {\n  case \"bullet\":\n    tag = \"ul\";\n    break;\n  case \"alpha-lower\":\n  case \"lower-alpha\":\n    type = \"a\";\n    break;\n  case \"alpha-upper\":\n  case \"upper-alpha\":\n    type = \"A\";\n    break;\n  case \"roman-lower\":\n  case \"lower-roman\":\n    type = \"i\";\n    break;\n  case \"roman-upper\":\n  case \"upper-roman\":\n    type = \"I\";\n    break;\n  default:\n    type = \"1\";\n    break;\n  }\n\n  return { tag, type };\n};\n\nexport const removeMsMetaSegments = (html) => {\n  return html.replace(/<!\\[if\\s+[^\\]]+\\]>((?!<!\\[endif\\])[\\s\\S])+<!\\[endif\\]>/g, \"\");\n}\n\n/**\n * Fixes issues pasting content from desktop version of Word. Replaces the flat\n * lists represented with `<p>` elements with actual list hierarchy based on the\n * data available in the HTML copied from desktop Word.\n *\n * See: https://github.com/ueberdosis/tiptap/issues/3756\n *\n * @param {String} html The original HTML pasted to the editor.\n * @returns {String} The transformed HTML that fixes the list markup to be\n *   correctly represented on an HTML document.\n */\nexport const transformMsDesktop = (html) => {\n  const doc = document.createElement(\"div\");\n  doc.innerHTML = removeMsMetaSegments(html);\n\n  const elements = doc.querySelectorAll([\n    \".MsoListParagraph\",\n    \".MsoListParagraphCxSpFirst\",\n    \".MsoListParagraphCxSpMiddle\",\n    \".MsoListParagraphCxSpLast\"\n  ].join(\", \"));\n  if (elements.length < 1) {\n    return html;\n  }\n\n  const listStyles = parseMsoListStyles(doc);\n  doc.querySelector(\"style\")?.remove();\n\n  let currentLevel = 1,\n      currentList = null;\n  elements.forEach((paragraph) => {\n    const { type: msoType, level } = detectMsoList(paragraph);\n    const listStyle = getMsoListStyle(msoType, level, listStyles);\n    const { tag, type } = converMsoListStyleToHtml(listStyle);\n\n    const li = document.createElement(\"li\");\n    const pa = document.createElement(\"p\");\n    pa.innerHTML = paragraph.innerHTML;\n    li.append(pa);\n\n    if (paragraph.classList.contains(\"MsoListParagraph\") || paragraph.classList.contains(\"MsoListParagraphCxSpFirst\")) {\n      currentLevel = 1;\n      currentList = document.createElement(tag);\n      if (tag === \"ol\" && type) {\n        currentList.setAttribute(\"type\", type);\n      }\n\n      currentList.append(li);\n      paragraph.replaceWith(currentList);\n    } else {\n      if (level > currentLevel) {\n        currentLevel += 1;\n\n        const subList = document.createElement(tag);\n        if (tag === \"ol\" && type) {\n          subList.setAttribute(\"type\", type);\n        }\n        if (level === currentLevel) {\n          subList.append(li);\n        } else {\n          const subLi = document.createElement(\"li\");\n          const subPa = document.createElement(\"p\");\n          subLi.append(subPa);\n          subList.append(subLi);\n        }\n        currentList.lastElementChild.append(subList);\n        currentList = subList;\n      } else {\n        while (level < currentLevel) {\n          currentLevel -= 1;\n          const candidate = currentList.parentNode.closest(\"ol, ul\");\n          if (candidate) {\n            currentList = candidate;\n          } else {\n            currentLevel = level;\n            break;\n          }\n        }\n        currentList.append(li);\n      }\n\n      if (paragraph.classList.contains(\"MsoListParagraphCxSpLast\")) {\n        currentLevel = 1;\n        currentList = null;\n      }\n\n      paragraph.remove();\n    }\n  });\n\n  return doc.innerHTML;\n}\n\n/**\n * Fixes issues pasting content from Office 365. Modifies the list structure\n * to represent the correct sub-list hierarchy based on the data available in\n * the HTML copied from Office 365. Based on this, Tiptap is able to correctly\n * create the hierarchy structure for the lists.\n *\n * See: https://github.com/ueberdosis/tiptap/issues/3751\n *\n * @param {String} html The original HTML pasted to the editor.\n * @returns {String} The transformed HTML that fixes the list hierarchy to be\n *   correctly represented on an HTML document.\n */\nexport const transformMsCould = (html) => {\n  const doc = document.createElement(\"div\");\n  doc.innerHTML = html;\n\n  // Fetch all the MS lists from the pasted content\n  const lists = {};\n  doc.querySelectorAll(\".ListContainerWrapper\").forEach((wrapper) => {\n    const li = wrapper.querySelector(\"li[data-listid]\");\n    lists[li.dataset.listid] ??= [];\n    lists[li.dataset.listid].push({ wrapper, level: parseInt(li.dataset.ariaLevel, 10) });\n  });\n  if (Object.keys(lists).length < 1) {\n    return html;\n  }\n\n  // Move the list elements to the correct hierarchical positions\n  Object.values(lists).forEach((list) => {\n    const { wrapper: parentWrapper } = list.shift();\n\n    let parent = parentWrapper.querySelector(\"ol, ul\");\n    parentWrapper.replaceWith(parent);\n\n    let currentLevel = 1;\n    let documentCurrentLevel = 1;\n    list.forEach(({ wrapper, level }) => {\n      const listElement = wrapper.querySelector(\"ol, ul\");\n\n      if (level > documentCurrentLevel) {\n        let target = null;\n        while (level > documentCurrentLevel) {\n          documentCurrentLevel += 1;\n          if (parent.lastElementChild) {\n            currentLevel += 1;\n            target = parent.lastElementChild;\n          }\n        }\n\n        target.append(listElement);\n        parent = listElement;\n      } else {\n        while (level < currentLevel) {\n          currentLevel -= 1;\n          const candidate = parent.parentNode.closest(\"ol, ul\");\n          if (candidate) {\n            parent = candidate;\n          } else {\n            currentLevel = level;\n            break;\n          }\n        }\n        documentCurrentLevel = level;\n        parent.append(...listElement.querySelectorAll(\"li\"));\n        listElement.remove();\n      }\n\n      wrapper.remove();\n    });\n  });\n\n  return doc.innerHTML;\n};\n\nconst transformers = [transformMsDesktop, transformMsCould];\n\nexport default (html) => {\n  let final = html;\n  transformers.forEach((method) => (final = method(final)));\n  return final;\n};\n","/**\n * Gets the configured messages for Decidim. The configuration is passed from\n * the view to the JS within the layout template.\n *\n * @param {String | null} key The top-level key to fetch from the messages\n *   object or `null` to fetch all messages.\n * @returns {Object} The messages object\n */\nexport const getMessages = (key = null) => {\n  const allMessages = window.Decidim.config.get(\"messages\");\n  if (key === null) {\n    return allMessages;\n  }\n  let messages = allMessages;\n  key.split(\".\").forEach((part) => (messages = messages[part] || {}));\n  return messages;\n};\n\n/**\n * Turns a deep messages object into a dictionary object with a single level and\n * the keys separated with a dot.\n *\n * @param {Object} messages The messages object\n * @param {String | null} prefix Prefix for the messages on recursive calls\n * @returns {Object} The converted dictionary object\n */\nexport const createDictionary = (messages, prefix = \"\") => {\n  let final = {};\n  Object.keys(messages).forEach((key) => {\n    if (typeof messages[key] === \"object\") {\n      final = { ...final, ...createDictionary(messages[key], `${prefix}${key}.`) };\n    } else if (key === \"\") {\n      final[prefix?.replace(/\\.$/, \"\") || \"\"] = messages[key];\n    } else {\n      final[`${prefix}${key}`] = messages[key];\n    }\n  });\n\n  return final;\n};\n\n/**\n * Creates a dictionary object from the top-level messages object with the\n * provided key.\n *\n * @param {String | null} key The top-level message key to create the dictionary\n *   for\n * @returns {Object} The dictionary object\n */\nexport const getDictionary = (key) => {\n  return createDictionary(getMessages(key));\n}\n"],"names":[],"sourceRoot":""}