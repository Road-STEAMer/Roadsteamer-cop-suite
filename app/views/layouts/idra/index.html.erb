<style>
  .container{
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .dropdown-container{
    display: flex;
    vertical-align:baseline;
    justify-content: space-between;
    width: 100%;
  }

  .dropdown-sort-by{
     text-align: left;
  }

  .content-on-left{
    display: flex;
    justify-content: flex-start;
    gap: 50px;
    width:100%;
    vertical-align: baseline;
  }

  .content-on-right{
     display: flex;
     justify-content: flex-end;
     vertical-align: baseline;
     height: 40px;
     margin-top: 40px;
  }

  .search-form {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    background-color: rgba(var(--secondary-rgb), 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-top: 20px;
    height: 200px;
    width: 100%;
    max-width: 1400px;
    padding: 40px;
    border-radius: 5px;
  }

  .search-form input[type="text"] {
    padding: 10px;
    border: 1px solid white;
    border-radius: 5px;
    color: black;
    width: 100%;
    margin-top: 40px;
  }

  .search-form input[type="submit"] {
    margin-left: 10px;
    cursor: pointer;
  }

  .row-body {
    display: flex;
    justify-content: center;
    width: 100%;
    max-width: 1400px;
    margin: 20px auto;
  }

  /* Column Styles */
  .col-left {
    flex: 1;
    margin-right:40px;
    padding: 0px;
    margin-left: 0px;
  }

  .col-right {
    flex: 3;
    width: 100%; /* Adjust the width to take full container width */

  }

  .div-buttons{

     display:flex;
     justify-content: space-between;
     gap: 2px;

  }

   .div-buttons-bottom{

     display:flex;
     justify-content: flex-end;
     gap: 2px;

  }

   .facets-card {

        border-radius: 5px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        color: black;
  }

   .card-title{
        background-color: #1a181d;
        color:white;
        width: 100%;
        border-radius: 5px 5px 0px 0px;
  }


   .card-body{
        display: flex;
        flex-direction: column;
        text-align: left;
        margin-left: 20px;
        margin-top: 10px;
   }

  .card-body .hidden {
   display: none;
  }

  .results-card{
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        padding: 20px;
        margin-bottom: 5px;
        width: 100%;
    }

   .results-card-title a{
    color: var(--primary);
   }

   .results-card-body{
    color: grey;
   }

   .filter-box{
     display:flex;
     align-items: center;
     margin-top:20px;
     max-width: 1200px;
   }

   .filter-item{
     margin-right: 5px;
     background: var(--secondary);
     color: white;
     padding: 5px 10px 5px 20px;
     border-radius: 15px;
     height: 40px;
   }

   .filter-item:hover{
     transform: scale(1.05)
   }

   .filter-item a{
     font-size: 20px;
     color: white;
     text-decoration: none;
     border-radius:5px;
     padding: 0px 8px 2px 8px;
     background-color:transparent;
   }

   .filter-item a:hover{
     color: var(--primary)
   }

   .format-container{
     display: flex;
     gap: 10px;
     margin-top:40px;
   }

   .tag-container {
  display: flex;
  flex-wrap: wrap; 
  gap: 10px;
  margin-top: 40px;
  flex-direction: row; 
}


   .format-box{
     border: 1px solid;
     border-color: gray;
     padding:0px 10px 0px 10px;
     color: gray;
     border-radius:10px;

   }

   .truncated-content p{
     margin:0px;
   }


   /* Styles for the overlay */
  .modal-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  z-index: 1000; /* Adjust the z-index as needed to ensure it's above other content */
  }

  /* Styles for the modal */
  .modal {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
  z-index: 1001; /* Make it appear on top of the overlay */
  width: 60%;
  height: 60%;
  border-radius: 15px;
  }

  /* Styles for the close button */
  .close {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  }


  #openModalButton:hover{
    transform:scale(1.05,1.05)
  }



  .cloud {
  padding-top: 60px;
  max-width: 1000px;
  text-align: center;
  line-height: 1 /* Adjust this value to reduce or increase space between lines */
  }

  .cloud span{
  cursor: pointer;
  }
</style>
<div class="container">
  <div class="modal-overlay">
    <div class="modal">
      <div id="partial-view-container">
        <%= render partial: "layouts/idra/datasets_list" %>
      </div>
      <span class="close" id="closeModal">&times;</span>
    </div>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", function () {

    function openModal() {
    var modalOverlay = document.querySelector(".modal-overlay");
    modalOverlay.style.display = "block";
    }

    function closeModal() {
    var modalOverlay = document.querySelector(".modal-overlay");
    modalOverlay.style.display = "none";
    if (deleted > 0){
    refreshPage()
    }
    }

    var openModalButton = document.getElementById("openModalButton");
    openModalButton.addEventListener("click", openModal);

    var closeModalButton = document.getElementById("closeModal");
    closeModalButton.addEventListener("click", closeModal);

    });
  </script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- Search form -->
  <form class="search-form" action="<%= url_for(controller: "idra", action: "index") %>" method="get">
    <% search_value = params[:search].presence || session[:search_value].presence || "" %>
    <input type="text" name="search" value="<%= search_value.presence%>">
    <div class="dropdown-container">
      <div class="content-on-left">
        <div class="dropdown-pages">
          <p>Results:</p>
          <%= select_tag "rows", options_for_select({ "5" => 5, "15" => 15, "25" => 25, "50" => 50 }, @rows) %>
        </div>
        <div class="dropdown-sort-by">
          <p>Sort by:</p>
          <%= select_tag "field", options_for_select({ "Release date" => "releaseDate", "Updated" => "updateDate", "Catalogue" => "nodeID", "Title" => "title" }, @rows) %>
        </div>
      </div>
      <input class="button content-on-right" type="submit" value="Submit">
    </div>
    <p <%= "hidden" if @search_value == '""'%> style="color:black; padding-bottom:20px"><%= @total_results %> results found.</p>
  </form>
  <% if @search_value === '""'%>
    <div class="cloud">
      <p>
        <% @tags_values.each do |tag| %>
          <span class="search-trigger" ><%= tag["facet"] %></span>
        <% end %>
      </p>
    </div>
  <%end%>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      var searchTriggers = document.querySelectorAll('.search-trigger');

      searchTriggers.forEach(function(trigger) {
        trigger.addEventListener('click', function() {
          var searchValue = this.textContent.trim(); // Ottieni il testo dello span cliccato

          // Imposta il valore dell'input di ricerca
          var searchInput = document.querySelector('input[name="search"]');
          if (searchInput) {
            searchInput.value = searchValue;

            // Invia il modulo
            var searchForm = document.querySelector('.search-form');
            if (searchForm) {
              searchForm.submit();
            }
          }
        });
      });
    });
  </script>
  <script>
    function shuffle(array) {
      for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
      }
      return array;
    }

    var spans = document.querySelectorAll('.cloud span');
    var colors = ['--primary', '--secondary', '--warning'];

    spans.forEach(function(span, index) {
      var colorIndex = index % colors.length;
      var colorVariable = colors[colorIndex];
      span.style.color = `var(${colorVariable})`;

      var text = span.textContent.trim();
      var number = text.match(/\(\d+\)/);

      if (number !== null) {
        var newText = text.replace(number[0], '').replace(/\(|\)/g, '').trim();
        span.textContent = newText + " " + " ";

        var weight = parseInt(number[0].replace(/\(|\)/g, ''));
        var fontSize = weight

        fontSize = Math.min(Math.max(fontSize, 15), 80);

        span.style.fontSize = fontSize + 'px';
      }
    });

    function highlightSpan() {
      // Ottieni il colore corrente in formato RGB
      var currentColor = getComputedStyle(this).color;

      // Estrai i valori di rosso, verde e blu dal colore RGB
      var rgbValues = currentColor.match(/\d+/g);
      var red = rgbValues[0];
      var green = rgbValues[1];
      var blue = rgbValues[2];

      // Imposta il colore con un'opacit√† del 50%
      var rgbaColor = 'rgba(' + red + ', ' + green + ', ' + blue + ', 0.3)';

      // Imposta il colore di sfondo con trasparenza
      this.style.backgroundColor = rgbaColor;
    }


    // Funzione per gestire l'evento mouseleave
    function resetHighlight() {
      this.style.backgroundColor = ''; // Ripristina il colore di sfondo predefinito
    }

    // Aggiungi eventi mouseenter e mouseleave a ciascuno span
    spans.forEach(function (span) {
      span.addEventListener('mouseenter', highlightSpan);
      span.addEventListener('mouseleave', resetHighlight);
    });

    var shuffledSpans = shuffle(Array.from(spans));

    var parentContainer = document.querySelector('.cloud');
    parentContainer.innerHTML = '';

    shuffledSpans.forEach(function(span) {
      parentContainer.appendChild(span);
    });
  </script>
  <!-- Filters -->
  <div class="filter-box">
    <% if @selected_filters.present? %>
      <% @selected_filters.each do |obj| %>
        <% obj.delete("") %>
        <% obj.each do |filter| %>
          <div class="filter-item">
            <% @tags_values.each do |tag| %>
              <% if tag.any? { |x| x.include?(filter) } %>
                <% if obj.last == filter %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ tags_value: [@tags_value.gsub(filter, "").chop].compact.join(",") })) %>
                <% else %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ tags_value: [@tags_value.gsub(filter +",", "").delete("")].compact.join(",") })) %>
                <% end %>
              <% end %>
            <% end %>
            <% @formats_values.each do |fm| %>
              <% if fm.any? { |x| x.include?(filter) } %>
                <% if obj.last == filter %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +"", "").chop].compact.join(",") })) %>
                <% else %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +",", "").delete("")].compact.join(",") })) %>
                <% end %>
              <% end %>
            <% end %>
            <% @licenses_values.each do |license| %>
              <% if license.any? { |x| x.include?(filter) } %>
                <% if obj.last == filter %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ licenses_value: [@licenses_value.gsub(filter +"", "").chop].compact.join(",") })) %>
                <% else %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ licenses_value: [@licenses_value.gsub(filter +",", "").delete("")].compact.join(",") })) %>
                <% end %>
              <% end %>
            <% end %>
            <% @catalogues_values.each do |catalogue| %>
              <% if catalogue.any? { |x| x.include?(filter) } %>
                <% if obj.last == filter %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +"", "").chop].compact.join(",") })) %>
                <% else %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +",", "").delete("")].compact.join(",") })) %>
                <% end %>
              <% end %>
            <% end %>
            <% @categories_values.each do |category| %>
              <% if category.any? { |x| x.include?(filter) } %>
                <% if obj.last == filter %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +"", "").chop].compact.join(",") })) %>
                <% else %>
                  <%= filter %>
                  <%= link_to "x", url_for(request.parameters.merge({ formats_value: [@formats_value.gsub(filter +",", "").delete("")].compact.join(",") })) %>
                <% end %>
              <% end %>
            <% end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  </div>
  <div class="row-body">
    <!-- Left cards column -->
    <div <%= "hidden" if @search_value == '""' %> class="col col-left">
      <!-- Start card -->
      <div class="facets-card">
        <div class="card-title"><%= @tags["displayName"] %></div>
        <div class="card-body">
          <% @tags_values.each_with_index do |tag, index| %>
            <div class="facet-item-tags <%= "hidden" if index >= 10 %>">
              <% if @selected_filters.size > 0 %>
                <% unless @selected_filters.any? { |filter| filter.include?(tag["keyword"]) } %>
                  <%= link_to tag["facet"], url_for(request.parameters.merge({ tags_value: [params[:tags_value], tag["keyword"]].compact.join(",") })) %>
                <% end %>
              <% else %>
                <%= link_to tag["facet"], url_for(request.parameters.merge({ tags_value: [params[:tags_value], tag["keyword"]].compact.join(",") })) %>
              <% end %>
            </div>
          <% end %>
        </div>
        <div class="show-more-button">
          <br>
          <a <%= "hidden" if @tags_values.size <= 10 %> id="showMoreTagsBtn">Show all results</a>
          <span  <%= "hidden" if @tags_values.size > 0 %>>No results</span>
       </div>
     </div>

     <br>

       <!-- Start card -->

       <div class="facets-card">
       <div class="card-title"><%= @formats["displayName"] %></div>
            <div class="card-body">
              <% @formats_values.each_with_index do |fm, index| %>
                <div class="facet-item-formats <%= "hidden" if index >= 10 %>">
                  <% if @selected_filters.size > 0 %>
                    <% unless @selected_filters.any? { |filter| filter.include?(fm["keyword"]) } %>
                      <%= link_to fm["facet"], url_for(request.parameters.merge({ formats_value: [params[:formats_value], fm["keyword"]].compact.join(",") })) %>
                    <% end %>
                  <% else %>
                    <%= link_to fm["facet"], url_for(request.parameters.merge({ formats_value: [params[:formats_value], fm["keyword"]].compact.join(",") })) %>
                  <% end %>
                </div>
              <% end %>
            </div>
            <div class="show-more-button">
              <br>
              <a <%= "hidden" if @formats_values.size <= 10 %> id="showMoreFormatsBtn">Show all results</a>
              <span  <%= "hidden" if @formats_values.size > 0 %>>No results</span>
       </div>
     </div>

     <br>

       <!-- Start card -->

       <div class="facets-card">
       <div class="card-title"><%= @licenses["displayName"] %></div>
                <div class="card-body">
                  <% @licenses_values.each_with_index do |license, index| %>
                    <div class="facet-item-licenses <%= "hidden" if index >= 10 %>">
                      <% if @selected_filters.size > 0 %>
                        <% unless @selected_filters.any? { |filter| filter.include?(license["keyword"]) } %>
                          <%= link_to license["facet"], url_for(request.parameters.merge({ licenses_value: [params[:licenses_value], license["keyword"]].compact.join(",") })) %>
                        <% end %>
                      <% else %>
                        <%= link_to license["facet"], url_for(request.parameters.merge({ licenses_value: [params[:licenses_value], license["keyword"]].compact.join(",") })) %>
                      <% end %>
                    </div>
                  <% end %>
                </div>
                <div class="show-more-button">
                  <br>
                  <a <%= "hidden" if @licenses_values.size <= 10 %> id="showMoreLicensesBtn">Show all results</a>
                  <span  <%= "hidden" if @licenses_values.size > 0 %>>No results</span>
       </div>
     </div>

     <br>

       <!-- Start card -->

       <div class="facets-card">
       <div class="card-title"><%= @catalogues["displayName"] %></div>
                    <div class="card-body">
                      <% @catalogues_values.each_with_index do |catalogue, index| %>
                        <div class="facet-item-catalogues <%= "hidden" if index >= 10 %>">
                          <% if @selected_filters.size > 0 %>
                            <% unless @selected_filters.any? { |filter| filter.include?(catalogue["keyword"]) } %>
                              <%= link_to catalogue["facet"], url_for(request.parameters.merge({ catalogues_value: [params[:catalogues_value], catalogue["keyword"]].compact.join(",") })) %>
                            <% end %>
                          <% else %>
                            <%= link_to catalogue["facet"], url_for(request.parameters.merge({ catalogues_value: [params[:catalogues_value], catalogue["keyword"]].compact.join(",") })) %>
                          <% end %>
                        </div>
                      <% end %>
                    </div>
                    <div class="show-more-button">
                      <br>
                      <a <%= "hidden" if @catalogues_values.size <= 10 %> id="showMoreCataloguesBtn">Show all results</a>
                      <span <%= "hidden" if @catalogues_values.size > 0 %>>No results</span>
       </div>
     </div>

     <br>


       <!-- Start card -->

       <div class="facets-card">
       <div class="card-title"><%= @categories["displayName"] %></div>
                        <div class="card-body">
                          <% @categories_values.each_with_index do |category, index| %>
                            <div class="facet-item-categories" <%= "hidden" if index >= 10 %>>
                              <% if @selected_filters.size > 0 %>
                                <% unless @selected_filters.any? { |filter| filter.include?(category["keyword"]) } %>
                                  <%= link_to category["facet"], url_for(request.parameters.merge({ categories_value: [params[:categories_value], category["keyword"]].compact.join(",") })) %>
                                <% end %>
                              <% else %>
                                <%= link_to category["facet"], url_for(request.parameters.merge({ categories_value: [params[:categories_value], category["keyword"]].compact.join(",") })) %>
                              <% end %>
                            </div>
                          <% end %>
                        </div>
                        <div class="show-more-button">
                          <br>
                          <a id="showMoreCategoriesBtn" <%= "hidden" if @categories_values.size <= 10 %>>Show all results</a>
          <span <%= "hidden" if @categories_values.size > 0 %>>No results</span>
       </div>
        
     </div>

     <br>

   </div>


  <!-- Buttons on top -->
   <div <%= "hidden" if @search_value == '""' %> class="col col-right">
                            <div class="div-buttons" style=" width: 100%">
                              <div><%if current_user %><button id="openModalButton" class="button" style="padding: 0px;display:flex; align-items: center;width:3em;height:3em;color:var(--warning);background-color: transparent;" 
                            onclick="openModal()"><span style="font-size:30px">‚òÖ</span>(<span id="count"></span>)</button><%end%>
                              </div>
                              <div class="div-buttons">
                                <% if @start.to_i > 0 %>
                                  <button class="button"><%= link_to "First Page", idra_path(request.query_parameters.merge(start: 0)) %></button>
                                <% else %>
                                  <button class="button" disabled>First Page</button>
                                <% end %>
                                <% if @start.to_i > 0 %>
                                  <button class="button"><%= link_to "Previous", idra_path(request.query_parameters.merge(start: @start.to_i - @rows.to_i)) %></button>
                                <% else %>
                                  <button class="button" disabled>Previous</button>
                                <% end %>
                                <div style="color: var(--secondary); margin: 10px">
                                  <% current_page = (@start.to_i / @rows.to_i) + 1 %>
                                  <strong><%= current_page %></strong>
                                </div>
                                <% if @start.to_i + @rows.to_i < @total_results %>
                                  <button class="button"><%= link_to "Next", idra_path(request.query_parameters.merge(start: @start.to_i + @rows.to_i)) %></button>
                                <% else %>
                                  <button class="button" disabled>Next</button>
                                <% end %>
                                <% if @rows.to_i > 0 && @total_results.to_i > 0 && @start.to_i < ((@total_results.to_i - 1) / @rows.to_i) * @rows.to_i %>
                                  <button class="button"><%= link_to "Last Page", idra_path(request.query_parameters.merge(start: ((@total_results.to_i - 1) / @rows.to_i) * @rows.to_i)) %></button>
                                <% else %>
                                  <button class="button" disabled>Last Page</button>
                                <% end %>
                              </div>
                            </div>
                            <!-- Column on Right (Results) -->
                            <% @api_results["results"].each_with_index do |result, index| %>
                              <div class="results-card">
                                <div class="results-card-title">
                                  <div style="display: flex;  align-items: baseline; justify-content: space-between">
                                    <h4><a><%= result["title"] %></a></h4>
                                    <!-- Save dataset -->
                                    <% if current_user %>
                                      <button id='buttonId-<%= index %>' class="bg-transparent" style="cursor: pointer; transform: scale(1.5,1.5)" 
        onclick="SaveTitle('<%= result['title'] %>','buttonId-<%= index %>', '<%= result['landingPage'] %>'); toggleStar('buttonId-<%= index %>')" data-star="<% if @list.include?(result["title"]) %>1<% else %>0<% end %>">
                                        <% if @list.include?(result["title"]) %><span style="color: var(--warning)">‚òÖ</span><% else %>‚òÜ<% end %>
                                      </button>
                                    <%end%>
                                  </div>
                                  <script type="text/javascript">
                                    var counter = '<%= @element_count %>';
                                    var counterText = document.getElementById("count");
                                    counterText.innerHTML = counter;
                                    var starCounterButton = document.getElementById("openModalButton")

                                    var counterModalText = document.getElementById("countModal")
                                    counterModalText.innerHTML = counter;


                                    if(counter === '0') {
                                      starCounterButton.disabled = true
                                    }else{starCounterButton.disabled= false;}


                                    function toggleStar(buttonId) {
                                      var button = document.getElementById(buttonId);
                                      var isStar = button.getAttribute('data-star');
                                      var counterText = document.getElementById("count");

                                      if (isStar === '1') {
                                        button.setAttribute('data-star', '0');
                                        button.innerHTML = "‚òÜ"; // Set the button content to "‚òÜ"
                                        button.style.color = ""; // Reset button text color
                                        counter--;
                                        if (counter === 0){
                                          starCounterButton.disabled = true;
                                        }
                                        counterText.innerHTML = counter;
                                      } else {
                                        button.setAttribute('data-star', '1');
                                        button.innerHTML = "<span style='color: var(--warning)'>‚òÖ</span>"; // Set the button content to "‚òÖ"
                                        counter++;
                                        counterText.innerHTML = counter;
                                        starCounterButton.disabled = false;
                                    }
                                    }


                                    function updatePartialView() {
                                            // Fetch the updated content from the server
                                            fetch('/idra_update', {
                                              method: 'GET'
                                            })
                                              .then(response => {
                                                if (response.ok) {
                                                  return response.text(); // Assuming the response is HTML
                                                } else {
                                                  throw new Error('Failed to fetch the updated content');
                                                }
                                              })
                                              .then(data => {
                                                // Update the partial view container with the fetched HTML
                                                document.getElementById('partial-view-container').innerHTML = data;
                                              })
                                              .catch(error => {
                                                console.error('Error updating partial view:', error);
                                              });
                                          }

                                          function SaveTitle(title, buttonId, url) {

                                            fetch('/idra_create', {
                                              method: 'POST',
                                              headers: {
                                                'Content-Type': 'application/json',
                                                'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content
                                              },
                                              body: JSON.stringify({ selected_titles: title, selected_url: url })
                                            })
                                              .then(response => {
                                                if (response.ok) {
                                                  updatePartialView();

                                                } else {
                                                  // Handle errors if needed
                                                }
                                              })
                                              .catch(error => {
                                                // Handle errors if needed
                                              });

                                                function updateFromModal(title) {
                                        fetch('/idra_create', {
                                          method: 'POST',
                                          headers: {
                                            'Content-Type': 'application/json',
                                            'X-CSRF-Token': document.querySelector("meta[name=csrf-token]").content
                                          },
                                          body: JSON.stringify({ selected_titles: title })
                                        })
                                        .then(response => {
                                          if (response.ok) {
                                            updatePartialView();
                                            counter--;
                                            closeModalIfEmpty()
                                          } else {
                                            // Handle errors if needed
                                          }
                                        })
                                        .catch(error => {
                                          // Handle errors if needed
                                        });
                                      }
                                          }
                                  </script>
                                </div>
                                <div class="results-card-body">
                                  <div class="truncated-content">
                                    <%= truncate_html(result["description"], length: 300) %>
                                  </div>
                                  <div class="full-content" style="display: none;", id="full-content-<%= index %>">
                                    <%= result["description"].html_safe %>
                                    <div class="column" style="width: 100%; margin: 0px; padding:20px 0px 50px 0px">
                                      <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                      <div style="width: 100%" class="row">
                                        <p style="font-weight: bold">Tags</p>
                                        <div class="tag-container" style="margin-bottom: 20px; margin-top: 0px">
                                          <% result["keywords"].each_with_index do |obj, index| %>
                                            <div class="format-box"><%= obj %></div>
                                          <% end %>
                                        </div>
                                      </div>
                                      <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                      <div class="row">
                                        <p style="font-weight: bold">Resources</p>
                                        <% result["distributions"].each_with_index do |obj, index| %>
                                          <div class="row" style="display:flex; flex-direction: rows; margin: 20px;">
                                            <div class="column"><%= obj["format"] %></div>
                                            <div class="column"><%= obj["title"] %></div>
                                            <% if obj["description"].size > 0 %>
                                              <div class="column"><%= obj["description"] %></div>
                                            <% else %>
                                              <div class="column"> No description available </div>
                                            <% end %>
                                            <div class="column">
                                              <button class="button show-more-details-button" style="margin:0px; padding:10px" data-target="show-more-details-<%= index %>">+</button>
                                              <%= link_to "Download", obj["downloadURL"], class: "button", style: "margin:0px; padding:10px", target: "_blank" %>
                                            </div>
                                          </div>
                                          <div id="show-more-details-<%= index %>" class="row" style="background-color:rgba(var(--secondary-rgb), 0.1);border-radius: 5px; 
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);display:none; margin: 0px 60px 0px 30px; padding: 20px">
                                            <strong>Title:</strong> <%= obj["title"] %>
                                            <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                            <strong>Format:</strong>: <%= obj["format"] %>
                                            <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                            <strong>download URL</strong>: <%= link_to obj["donwloadURL"], obj["downloadURL"], target: "_blank" %>
                                            <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                            <strong>License</strong>: <%= link_to obj["license"]["name"], obj["downloadURL"], target: "_blank" %>
                                            <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                            <strong>Media type</strong>: <%= obj["mediaType"] %>
                                            <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                          </div>
                                         <% end %>
                                      </div>
                                      <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                      <div style="width: 100%" class="row">
                                        <p style="font-weight: bold">Additionl info</p>
                                        <div style="display: flex; flex-direction: column; margin-left: 30px">
                                          <span><strong>Dataset page: </strong> <a href="<%=result["landingPage"]%>"> <%=result["landingPage"]%> </a></span>
                                          <span><strong>Licenses: </strong><a href="<%=result["distributions"][0]["license"]["uri"]%> "> <%=result["distributions"][0]["license"]["name"]%> </a></span></span>
                                          <span><strong>Publisher: </strong> <%=result["publisher"]["name"]%></span>
                                          <span><strong>Creator: </strong> <%=result["creator"]["name"]%></span>
                                          <span><strong>Release date: </strong><%=result["releaseDate"]%></span>
                                          <span><strong>Update date: </strong><%=result["updateDate"]%></span>
                                          <span><strong>Language: </strong><%=result["language"][0]%></span>
                                          <span><strong>Topic: </strong><%=result["theme"][0]["prefLabel"][0]["value"]%></span>
                                          <span><strong>Identifier: </strong><%=result["identifier"]%></span>
                                          <span><strong>Other identifiers: </strong><%=result["otherIdentifier"][0]%></span>
                                        </div>
                                      </div>
                                      <hr style= "height: 1px; border: none;background-color: lightgray; width: 100%; padding: 0px;margin: 0px">
                                    </div>
                                  </div>
                                  <a href="#" class="expand-link button small hollow card__button" style="margin-top: 2em" data-card-index="<%= index %>">Read More</a>
                                  <div class="format-container">
                                    <% displayed_formats = [] %>
                                    <% result["distributions"].each do |elem| %>
                                      <% unless elem["format"].to_s.empty? || displayed_formats.include?(elem["format"]) %>
                                        <div class="format-box">
                                          <%= elem["format"] %>
                                        </div>
                                        <% displayed_formats << elem["format"] %>
                                      <% end %>
                                    <% end %>
                                  </div>
                                </div>
                              </div>
                            <% end %>
                            <!-- Buttons on bottom -->
                            <div class="div-buttons-bottom" style="margin-top: 10px">
                              <% if @start.to_i > 0 %>
                                <button class="button"><%= link_to "First Page", idra_path(request.query_parameters.merge(start: @start.to_i - @rows.to_i)) %></button>
                              <% else %>
                                <button class="button" disabled>First Page</button>
                              <% end %>
                              <% if @start.to_i > 0 %>
                                <button class="button"><%= link_to "Previous", idra_path(request.query_parameters.merge(start: @start.to_i - @rows.to_i)) %></button>
                              <% else %>
                                <button class="button" disabled>Previous</button>
                              <% end %>
                              <div style="color: var(--secondary); margin: 10px">
                                <% current_page = (@start.to_i / @rows.to_i) + 1 %>
                                <strong><%= current_page %></strong>
                              </div>
                              <% if @start.to_i + @rows.to_i < @total_results %>
                                <button class="button"><%= link_to "Next", idra_path(request.query_parameters.merge(start: @start.to_i + @rows.to_i)) %></button>
                              <% else %>
                                <button class="button" disabled>Next</button>
                              <% end %>
                              <% if @rows.to_i > 0 && @total_results.to_i > 0 && @start.to_i < ((@total_results.to_i - 1) / @rows.to_i) * @rows.to_i %>
                                <button class="button"><%= link_to "Last Page", idra_path(request.query_parameters.merge(start: ((@total_results.to_i - 1) / @rows.to_i) * @rows.to_i)) %></button>
                              <% else %>
                                <button class="button" disabled>Last Page</button>
                              <% end %>
                            </div>
                          </div>
                        </div>
                      </div>
                      <script>
                        $(document).ready(function() {
                          // When the "Read More" link is clicked
                          $(".expand-link").click(function(e) {
                            e.preventDefault();

                            // Find the parent results-card div
                            const resultsCard = $(this).closest(".results-card");

                            // Find the corresponding results-card-body div
                            const resultCardBody = resultsCard.find(".results-card-body");

                            // Find the full content and truncated content
                            const fullContent = resultsCard.find(".full-content");
                            const truncatedContent = resultsCard.find(".truncated-content");

                            // Toggle the visibility of the full content and truncated content
                            fullContent.toggle();
                            truncatedContent.toggle();

                            // Toggle a class to indicate expanded/collapsed state
                            resultCardBody.toggleClass("expanded");

                            // Update the link text based on the class
                            const linkText = resultCardBody.hasClass("expanded") ? "Read Less" : "Read More";
                            $(this).text(linkText);
                          });
                        });


                         $(document).ready(function() {
                          // When the "Show More" button is clicked
                          $("#showMoreTagsBtn").click(function(e) {
                            e.preventDefault();


                            // Toggle the visibility of the hidden facet items
                            $(".facet-item-tags.hidden").toggle();

                            // Update the "Show More" button text
                            $(this).text(function (_, text) {
                              return text === "Show all results" ? "Show less" : "Show all results";
                            });
                          });
                        });


                          $(document).ready(function() {
                          // When the "Show More" button is clicked
                          $("#showMoreFormatsBtn").click(function(e) {
                            e.preventDefault();

                            // Toggle the visibility of the hidden facet items
                            $(".facet-item-formats.hidden").toggle();

                            // Update the "Show More" button text
                            $(this).text(function (_, text) {
                              return text === "Show all results" ? "Show less" : "Show all results";
                            });
                          });
                        });

                        $(document).ready(function() {
                          // When the "Show More" button is clicked
                          $("#showMoreLicensesBtn").click(function(e) {
                            e.preventDefault();

                            // Toggle the visibility of the hidden facet items
                            $(".facet-item-licenses.hidden").toggle();

                            // Update the "Show More" button text
                            $(this).text(function (_, text) {
                              return text === "Show all results" ? "Show less" : "Show all results";
                            });
                          });
                        });

                        $(document).ready(function() {
                          // When the "Show More" button is clicked
                          $("#showMoreCataloguesBtn").click(function(e) {
                            e.preventDefault();

                            // Toggle the visibility of the hidden facet items
                            $(".facet-item-catalogues.hidden").toggle();

                            // Update the "Show More" button text
                            $(this).text(function (_, text) {
                              return text === "Show all results" ? "Show less" : "Show all results";
                            });
                          });
                        });

                        $(document).ready(function() {
                          // When the "Show More" button is clicked
                          $("#showMoreCategoriesBtn").click(function(e) {
                            e.preventDefault();

                            // Toggle the visibility of the hidden facet items
                            $(".facet-item-categories.hidden").toggle();

                            // Update the "Show More" button text
                            $(this).text(function (_, text) {
                              return text === "Show all results" ? "Show less" : "Show all results";
                            });
                          });
                        });


                         // + button show div


                           document.addEventListener("DOMContentLoaded", function() {
                           const showMoreButtons = document.querySelectorAll(".show-more-details-button");

                           showMoreButtons.forEach(button => {
                             button.addEventListener("click", function() {
                               const card = button.closest(".results-card");
                               const targetId = button.getAttribute("data-target");
                               const detailsDiv = card.querySelector("#" + targetId);

                               if (detailsDiv.style.display === "none" || detailsDiv.style.display === "") {
                                 detailsDiv.style.display = "block";
                                 button.textContent = "-";
                               } else {
                                 detailsDiv.style.display = "none";
                                 button.textContent = "+";
                               }
                             });
                           });
                         });
                      </script>
