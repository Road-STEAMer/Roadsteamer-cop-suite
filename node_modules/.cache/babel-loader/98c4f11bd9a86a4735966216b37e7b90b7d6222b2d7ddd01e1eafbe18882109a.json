{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nvar _excluded = [\"value\", \"userData\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n/**\n * Decidim rich text editor control plugin\n * Renders standard Decidim WYSIWYG editor\n *\n * Registers Decidim Richtext as a subtype for the textarea control\n */\nimport { createQuillEditor } from \"src/decidim/decidim_awesome/editors/editor\";\n\n// configure the class for runtime loading\nif (!window.fbControls) {\n  window.fbControls = [];\n}\nwindow.fbControls.push(function (controlClass, allControlClasses) {\n  var controlTextarea = allControlClasses.textarea;\n\n  /**\n   * DecidimRichtext control class\n   *\n   * NOTE: I haven't found a way to set the userData value using this plugin\n   *       For this reason the value of the field must be collected manually\n   *       from the hidden input name same as the field with the suffix '-input'\n   */\n  var controlRichtext = /*#__PURE__*/function (_controlTextarea) {\n    _inherits(controlRichtext, _controlTextarea);\n    var _super = _createSuper(controlRichtext);\n    function controlRichtext() {\n      _classCallCheck(this, controlRichtext);\n      return _super.apply(this, arguments);\n    }\n    _createClass(controlRichtext, [{\n      key: \"configure\",\n      value:\n      /**\n       * configure the richtext editor requirements\n       * @return {void}\n       */\n      function configure() {\n        window.fbEditors.richtext = {};\n      }\n\n      /**\n       * build a div DOM element & convert to a richtext editor\n       * @return {DOMElement} DOM Element to be injected into the form.\n       */\n    }, {\n      key: \"build\",\n      value: function build() {\n        var _this$config = this.config,\n          value = _this$config.value,\n          userData = _this$config.userData,\n          attrs = _objectWithoutProperties(_this$config, _excluded);\n\n        // hidden input for storing the current HTML value of the div\n        this.inputId = \"\".concat(this.id, \"-input\");\n        // console.log(\"build plugin: this\",this)\n        this.input = this.markup(\"input\", null, {\n          name: name,\n          id: this.inputId,\n          type: \"hidden\",\n          value: userData && userData[0] || value || \"\"\n        });\n        var css = this.markup(\"style\", \"\\n        #\".concat(attrs.id, \" { height: auto; min-height: 6rem; padding-left: 0; padding-right: 0; }\\n        #\").concat(attrs.id, \" div.ql-container { height: \").concat(attrs.rows || 1, \"rem; }\\n        #\").concat(attrs.id, \" p.help-text { margin-top: .5rem; }\\n        \"), {\n          type: \"text/css\"\n        });\n        var wrapperAttrs = _objectSpread(_objectSpread({}, attrs), {}, {\n          \"data-toolbar\": \"full\"\n        });\n        // console.log(\"build value\", value, \"userData\", userData, \"attrs\", attrs, attrs.id, \"wrapperAttrs\", wrapperAttrs);\n        this.wrapper = this.markup(\"div\", null, wrapperAttrs);\n        return this.markup(\"div\", [css, this.input, this.wrapper], attrs);\n      }\n\n      /**\n       * When the element is rendered into the DOM, execute the following code to initialise it\n       * @param {Object} evt - event\n       * @return {Object} evt - event\n       */\n    }, {\n      key: \"onRender\",\n      value: function onRender(evt) {\n        // const value = this.config.value || '';\n        if (window.fbEditors.richtext[this.id]) {\n          // console.log(\"todo destroy\", window.fbEditors.richtext[this.id]);\n          // window.fbEditors.richtext[this.id].richtext('destroy')\n        }\n        window.fbEditors.quill[this.id] = {};\n        var editor = window.fbEditors.quill[this.id];\n        // createQuillEditor does all the job to update the hidden input wrapper\n        editor.instance = createQuillEditor(this.wrapper);\n        // editor.data = new Delta();\n        // if (value) {\n        //   editor.instance.setContents(window.JSON.parse(this.parsedHtml(value)));\n        // }\n        // editor.instance.on('text-change', function(delta) {\n        //   console.log(\"text-change\", \"delta\", delta, \"editor\", editor);\n        // //   // editor.data = editor.data.compose(delta);\n        // });\n\n        // console.log(\"render! editor\", editor, \"this\", this, \"value\", value);\n        return evt;\n      }\n    }], [{\n      key: \"definition\",\n      get:\n      /**\n       * Class configuration - return the icons & label related to this control\n       * @return {JSON} definition object\n       */\n      function get() {\n        return {\n          icon: \"📝\",\n          i18n: {\n            \"default\": \"Rich Text Editor\"\n          }\n        };\n      }\n    }]);\n    return controlRichtext;\n  }(controlTextarea); // register Decidim richtext as a richtext control\n  controlTextarea.register(\"richtext\", controlRichtext, \"textarea\");\n});","map":{"version":3,"names":["createQuillEditor","window","fbControls","push","controlClass","allControlClasses","controlTextarea","textarea","controlRichtext","_controlTextarea","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","configure","fbEditors","richtext","build","_this$config","config","userData","attrs","_objectWithoutProperties","_excluded","inputId","concat","id","input","markup","name","type","css","rows","wrapperAttrs","_objectSpread","wrapper","onRender","evt","quill","editor","instance","get","icon","i18n","register"],"sources":["/home/daniele/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-decidim_awesome-0.10.2/app/packs/src/decidim/decidim_awesome/forms/rich_text_plugin.js"],"sourcesContent":["/**\n * Decidim rich text editor control plugin\n * Renders standard Decidim WYSIWYG editor\n *\n * Registers Decidim Richtext as a subtype for the textarea control\n */\nimport {createQuillEditor} from \"src/decidim/decidim_awesome/editors/editor\"\n\n// configure the class for runtime loading\nif (!window.fbControls) {\n  window.fbControls = []\n}\nwindow.fbControls.push(function(controlClass, allControlClasses) {\n  const controlTextarea = allControlClasses.textarea\n\n  /**\n   * DecidimRichtext control class\n   *\n   * NOTE: I haven't found a way to set the userData value using this plugin\n   *       For this reason the value of the field must be collected manually\n   *       from the hidden input name same as the field with the suffix '-input'\n   */\n  class controlRichtext extends controlTextarea {\n\n    /**\n     * Class configuration - return the icons & label related to this control\n     * @return {JSON} definition object\n     */\n    static get definition() {\n      return {\n        icon: \"📝\",\n        i18n: {\n          default: \"Rich Text Editor\"\n        }\n      }\n    }\n\n    /**\n     * configure the richtext editor requirements\n     * @return {void}\n     */\n    configure() {\n      window.fbEditors.richtext = {};\n    }\n\n    /**\n     * build a div DOM element & convert to a richtext editor\n     * @return {DOMElement} DOM Element to be injected into the form.\n     */\n    build() {\n      const { value, userData, ...attrs } = this.config;\n\n      // hidden input for storing the current HTML value of the div\n      this.inputId = `${this.id}-input`;\n      // console.log(\"build plugin: this\",this)\n      this.input = this.markup(\"input\", null, {\n        name: name,\n        id: this.inputId,\n        type: \"hidden\",\n        value: (userData && userData[0]) || value || \"\"\n      });\n\n      const css = this.markup(\n        \"style\",\n        `\n        #${attrs.id} { height: auto; min-height: 6rem; padding-left: 0; padding-right: 0; }\n        #${attrs.id} div.ql-container { height: ${attrs.rows || 1}rem; }\n        #${attrs.id} p.help-text { margin-top: .5rem; }\n        `,\n        { type: \"text/css\" }\n      );\n      const wrapperAttrs = {...attrs, \"data-toolbar\": \"full\" };\n      // console.log(\"build value\", value, \"userData\", userData, \"attrs\", attrs, attrs.id, \"wrapperAttrs\", wrapperAttrs);\n      this.wrapper = this.markup(\"div\", null, wrapperAttrs);\n      return this.markup(\"div\", [css, this.input, this.wrapper], attrs);\n    }\n\n    /**\n     * When the element is rendered into the DOM, execute the following code to initialise it\n     * @param {Object} evt - event\n     * @return {Object} evt - event\n     */\n    onRender(evt) {\n      // const value = this.config.value || '';\n      if (window.fbEditors.richtext[this.id]) {\n        // console.log(\"todo destroy\", window.fbEditors.richtext[this.id]);\n        // window.fbEditors.richtext[this.id].richtext('destroy')\n      }\n\n      window.fbEditors.quill[this.id] = {};\n      const editor = window.fbEditors.quill[this.id];\n      // createQuillEditor does all the job to update the hidden input wrapper\n      editor.instance = createQuillEditor(this.wrapper);\n      // editor.data = new Delta();\n      // if (value) {\n      //   editor.instance.setContents(window.JSON.parse(this.parsedHtml(value)));\n      // }\n      // editor.instance.on('text-change', function(delta) {\n      //   console.log(\"text-change\", \"delta\", delta, \"editor\", editor);\n      // //   // editor.data = editor.data.compose(delta);\n      // });\n\n      // console.log(\"render! editor\", editor, \"this\", this, \"value\", value);\n      return evt;\n    }\n  }\n\n  // register Decidim richtext as a richtext control\n  controlTextarea.register(\"richtext\", controlRichtext, \"textarea\");\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}