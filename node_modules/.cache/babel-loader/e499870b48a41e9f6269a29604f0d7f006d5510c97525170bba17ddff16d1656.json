{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/* eslint-disable require-jsdoc */\n\nimport lineBreakButtonHandler from \"src/decidim/editor/linebreak_module\";\nimport \"src/decidim/editor/clipboard_override\";\nimport \"src/decidim/vendor/image-resize.min\";\nimport \"src/decidim/vendor/image-upload.min\";\nvar quillFormats = [\"bold\", \"italic\", \"link\", \"underline\", \"header\", \"list\", \"video\", \"image\", \"alt\", \"break\", \"width\", \"style\", \"code\", \"blockquote\", \"indent\"];\nexport default function createQuillEditor(container) {\n  document.addEventListener('DOMContentLoaded', function () {\n    var toolbar = $(container).data(\"toolbar\");\n    var disabled = $(container).data(\"disabled\");\n    var allowedEmptyContentSelector = \"iframe\";\n    var quillToolbar = [[\"bold\", \"italic\", \"underline\", \"linebreak\"], [{\n      list: \"ordered\"\n    }, {\n      list: \"bullet\"\n    }], [\"link\", \"clean\"], [\"code\", \"blockquote\"], [{\n      \"indent\": \"-1\"\n    }, {\n      \"indent\": \"+1\"\n    }], [{\n      'savedDataset': \"openModal\"\n    }]];\n    var addImage = $(container).data(\"editorImages\");\n    if (toolbar === \"full\") {\n      quillToolbar = [[{\n        header: [2, 3, 4, 5, 6, false]\n      }]].concat(_toConsumableArray(quillToolbar), [[\"video\"]]);\n    } else if (toolbar === \"basic\") {\n      quillToolbar = [].concat(_toConsumableArray(quillToolbar), [[\"video\"]]);\n    }\n    var modalData = [];\n    var hasFetched = false; // Add this flag\n\n    // Function to fetch data\n    function fetchData() {\n      if (!hasFetched) {\n        // Check if fetch hasn't been performed yet\n        fetch('/idra_update', {\n          method: 'GET'\n        }).then(function (response) {\n          if (response.ok) {\n            return response.text(); // Assuming the response is HTML\n          } else {\n            throw new Error('Failed to fetch the updated content');\n          }\n        }).then(function (data) {\n          var parser = new DOMParser();\n          var doc = parser.parseFromString(data, 'text/html');\n          var datasetElements = doc.querySelectorAll('#datasets-list a');\n          var urlElements = doc.querySelectorAll('#datasets-list #url');\n          datasetElements.forEach(function (dataset, index) {\n            var title = dataset.textContent;\n            var url = urlElements[index].textContent;\n            modalData.push({\n              title: title,\n              url: url\n            });\n          });\n        })[\"catch\"](function (error) {\n          console.error('Error updating partial view:', error);\n        });\n        hasFetched = true; // Set the flag to indicate that fetch has been performed\n      }\n    }\n\n    // Call the fetchData function\n    fetchData();\n\n    // Function to create and display the modal\n    function openModal() {\n      // Create a modal container\n      var modalContainer = document.createElement('div');\n      modalContainer.classList.add('modal-container');\n\n      // Create a modal element\n      var modal = document.createElement('div');\n      modal.classList.add('modal');\n\n      // Modal content\n      var modalContent = document.createElement('div');\n      modalContent.classList.add('modal-content');\n      modalContent.id = 'modalContent';\n\n      // Create an unordered list to display the elements as a list\n      // Create a div for the links\n      var linksDiv = document.createElement('div');\n      linksDiv.classList.add('links-column');\n      var titleElement = document.createElement('h1');\n      titleElement.textContent = \"Saved Dataset\";\n      linksDiv.appendChild(titleElement);\n      titleElement.className = \"text-center\";\n      var descriptionElement = document.createElement(\"h5\");\n      descriptionElement.textContent = \"Select a dataset to insert in text editor:\";\n      descriptionElement.style.color = \"gray\";\n      linksDiv.appendChild(descriptionElement);\n\n      // Loop through modalData array and create links with click event listeners\n      modalData.forEach(function (element) {\n        var link = document.createElement('a');\n        link.href = element.url; // URL as the href attribute of the link\n        link.textContent = element.title; // Title as the visible text of the link\n        linksDiv.appendChild(link);\n        link.addEventListener('click', function (event) {\n          event.preventDefault(); // Prevent default navigation behavior\n\n          copyAndPasteText(element.title, element.url);\n          modalContainer.style.display = 'none'; // Close the modal\n        });\n\n        if (element !== modalData[modalData.length - 1]) {\n          linksDiv.appendChild(document.createElement('br'));\n        }\n      });\n\n      // Function to copy and paste the text into the Quill editor\n      function copyAndPasteText(title, url) {\n        var range = quill.getSelection();\n        var linkFormat = {\n          link: url,\n          target: '_blank'\n        };\n        quill.insertText(range.index, title, linkFormat);\n        quill.setSelection(range.index, title.length, 'user');\n      }\n      modalContent.appendChild(linksDiv);\n      modal.appendChild(modalContent);\n      modalContainer.appendChild(modal);\n      document.body.appendChild(modalContainer);\n\n      // Open the modal\n      modalContainer.style.display = 'block';\n\n      // Close modal when clicking outside the modal\n      window.addEventListener('click', function (event) {\n        if (event.target == modalContainer) {\n          modalContainer.style.display = 'none';\n        }\n      });\n    }\n    var modules = {\n      linebreak: {},\n      toolbar: {\n        container: quillToolbar,\n        handlers: {\n          \"linebreak\": lineBreakButtonHandler,\n          \"savedDataset\": openModal\n        }\n      }\n    };\n    var $input = $(container).siblings('input[type=\"hidden\"]');\n    container.innerHTML = $input.val() || \"\";\n    var token = $('meta[name=\"csrf-token\"]').attr(\"content\");\n    if (addImage) {\n      modules.imageResize = {\n        modules: [\"Resize\", \"DisplaySize\"]\n      };\n      modules.imageUpload = {\n        url: $(container).data(\"uploadImagesPath\"),\n        method: \"POST\",\n        name: \"image\",\n        withCredentials: false,\n        headers: {\n          \"X-CSRF-Token\": token\n        },\n        callbackOK: function callbackOK(serverResponse, next) {\n          $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\");\n          next(serverResponse.url);\n        },\n        callbackKO: function callbackKO(serverError) {\n          $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\");\n          console.log(\"Image upload error: \".concat(serverError.message));\n        },\n        checkBeforeSend: function checkBeforeSend(file, next) {\n          $(\"div.ql-toolbar\").last().addClass(\"editor-loading\");\n          next(file);\n        }\n      };\n    }\n    var quill = new Quill(container, {\n      modules: modules,\n      formats: quillFormats,\n      theme: \"snow\"\n    });\n    if (disabled) {\n      quill.disable();\n    }\n    quill.on(\"text-change\", function () {\n      var text = quill.getText();\n\n      // Triggers CustomEvent with the cursor position\n      // It is required in input_mentions.js\n      var event = new CustomEvent(\"quill-position\", {\n        detail: quill.getSelection()\n      });\n      container.dispatchEvent(event);\n      if ((text === \"\\n\" || text === \"\\n\\n\") && quill.root.querySelectorAll(allowedEmptyContentSelector).length === 0) {\n        $input.val(\"\");\n      } else {\n        var emptyParagraph = \"<p><br></p>\";\n        var cleanHTML = quill.root.innerHTML.replace(new RegExp(\"^\".concat(emptyParagraph, \"|\").concat(emptyParagraph, \"$\"), \"g\"), \"\");\n        $input.val(cleanHTML);\n      }\n    });\n    // After editor is ready, linebreak_module deletes two extraneous new lines\n    quill.emitter.emit(\"editor-ready\");\n    if (addImage) {\n      var text = $(container).data(\"dragAndDropHelpText\");\n      $(container).after(\"<p class=\\\"help-text\\\" style=\\\"margin-top:-1.5rem;\\\">\".concat(text, \"</p>\"));\n    }\n\n    // After editor is ready, linebreak_module deletes two extraneous new lines\n    quill.emitter.emit(\"editor-ready\");\n    return quill;\n  });\n}","map":{"version":3,"names":["lineBreakButtonHandler","quillFormats","createQuillEditor","container","document","addEventListener","toolbar","$","data","disabled","allowedEmptyContentSelector","quillToolbar","list","addImage","header","concat","_toConsumableArray","modalData","hasFetched","fetchData","fetch","method","then","response","ok","text","Error","parser","DOMParser","doc","parseFromString","datasetElements","querySelectorAll","urlElements","forEach","dataset","index","title","textContent","url","push","error","console","openModal","modalContainer","createElement","classList","add","modal","modalContent","id","linksDiv","titleElement","appendChild","className","descriptionElement","style","color","element","link","href","event","preventDefault","copyAndPasteText","display","length","range","quill","getSelection","linkFormat","target","insertText","setSelection","body","window","modules","linebreak","handlers","$input","siblings","innerHTML","val","token","attr","imageResize","imageUpload","name","withCredentials","headers","callbackOK","serverResponse","next","last","removeClass","callbackKO","serverError","log","message","checkBeforeSend","file","addClass","Quill","formats","theme","disable","on","getText","CustomEvent","detail","dispatchEvent","root","emptyParagraph","cleanHTML","replace","RegExp","emitter","emit","after"],"sources":["/home/daniele/decidim_idra/app/packs/src/decidim/editor.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nimport lineBreakButtonHandler from \"src/decidim/editor/linebreak_module\"\nimport \"src/decidim/editor/clipboard_override\"\nimport \"src/decidim/vendor/image-resize.min\"\nimport \"src/decidim/vendor/image-upload.min\"\n\nconst quillFormats = [\"bold\", \"italic\", \"link\", \"underline\", \"header\", \"list\", \"video\", \"image\", \"alt\", \"break\", \"width\", \"style\", \"code\", \"blockquote\", \"indent\"];\n\nexport default function createQuillEditor(container) {\ndocument.addEventListener('DOMContentLoaded', function() {\n\n  const toolbar = $(container).data(\"toolbar\");\n  const disabled = $(container).data(\"disabled\");\n\n  const allowedEmptyContentSelector = \"iframe\";\n  let quillToolbar = [\n    [\"bold\", \"italic\", \"underline\", \"linebreak\",],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"link\", \"clean\"],\n    [\"code\", \"blockquote\"],\n    [{ \"indent\": \"-1\" }, { \"indent\": \"+1\" }],\n    [{ 'savedDataset': \"openModal\" }]\n  ]\n\n  let addImage = $(container).data(\"editorImages\");\n\n  if (toolbar === \"full\") {\n    quillToolbar = [\n      [{ header: [2, 3, 4, 5, 6, false] }],\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  } else if (toolbar === \"basic\") {\n    quillToolbar = [\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  }\n\n\n  let modalData = [];\n  let hasFetched = false; // Add this flag\n\n  // Function to fetch data\n  function fetchData() {\n    if (!hasFetched) { // Check if fetch hasn't been performed yet\n      fetch('/idra_update', {\n        method: 'GET'\n      })\n        .then(response => {\n          if (response.ok) {\n            return response.text(); // Assuming the response is HTML\n          } else {\n            throw new Error('Failed to fetch the updated content');\n          }\n        })\n        .then(data => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(data, 'text/html');\n          const datasetElements = doc.querySelectorAll('#datasets-list a');\n          const urlElements = doc.querySelectorAll('#datasets-list #url');\n  \n          datasetElements.forEach((dataset, index) => {\n            const title = dataset.textContent;\n            const url = urlElements[index].textContent;\n            modalData.push({ title, url });\n          });\n        })\n        .catch(error => {\n          console.error('Error updating partial view:', error);\n        });\n  \n      hasFetched = true; // Set the flag to indicate that fetch has been performed\n    }\n  }\n\n  // Call the fetchData function\n  fetchData();\n\n\n  // Function to create and display the modal\n  function openModal() {\n    // Create a modal container\n    var modalContainer = document.createElement('div');\n    modalContainer.classList.add('modal-container');\n\n    // Create a modal element\n    var modal = document.createElement('div');\n    modal.classList.add('modal');\n\n    // Modal content\n    var modalContent = document.createElement('div');\n    modalContent.classList.add('modal-content');\n    modalContent.id = 'modalContent';\n\n    // Create an unordered list to display the elements as a list\n    // Create a div for the links\n    var linksDiv = document.createElement('div');\n    linksDiv.classList.add('links-column');\n\n    var titleElement = document.createElement('h1');\n    titleElement.textContent = \"Saved Dataset\";\n    linksDiv.appendChild(titleElement);\n    titleElement.className = \"text-center\"\n\n    var descriptionElement = document.createElement(\"h5\")\n    descriptionElement.textContent = \"Select a dataset to insert in text editor:\"\n    descriptionElement.style.color = \"gray\"\n    linksDiv.appendChild(descriptionElement)\n\n    // Loop through modalData array and create links with click event listeners\n    modalData.forEach(function (element) {\n      var link = document.createElement('a');\n      link.href = element.url; // URL as the href attribute of the link\n      link.textContent = element.title; // Title as the visible text of the link\n      linksDiv.appendChild(link);\n  \n      link.addEventListener('click', function (event) {\n        event.preventDefault(); // Prevent default navigation behavior\n  \n        copyAndPasteText(element.title, element.url);\n        modalContainer.style.display = 'none'; // Close the modal\n      });\n  \n      if (element !== modalData[modalData.length - 1]) {\n        linksDiv.appendChild(document.createElement('br'));\n      }\n    });\n\n\n    // Function to copy and paste the text into the Quill editor\n     function copyAndPasteText(title, url) {\n    const range = quill.getSelection();\n\n    const linkFormat = {\n      link: url,\n      target: '_blank',\n    };\n\n    quill.insertText(range.index, title, linkFormat);\n    quill.setSelection(range.index, title.length, 'user');\n  }\n    modalContent.appendChild(linksDiv);\n    modal.appendChild(modalContent);\n    modalContainer.appendChild(modal);\n    document.body.appendChild(modalContainer);\n\n    // Open the modal\n    modalContainer.style.display = 'block';\n\n    // Close modal when clicking outside the modal\n    window.addEventListener('click', function (event) {\n      if (event.target == modalContainer) {\n        modalContainer.style.display = 'none';\n      }\n    });\n  }\n\n\n  let modules = {\n    linebreak: {},\n    toolbar: {\n      container: quillToolbar,\n      handlers: {\n        \"linebreak\": lineBreakButtonHandler,\n        \"savedDataset\": openModal,\n      }\n    }\n  };\n\n  \n\n\n  const $input = $(container).siblings('input[type=\"hidden\"]');\n  container.innerHTML = $input.val() || \"\";\n  const token = $('meta[name=\"csrf-token\"]').attr(\"content\");\n  if (addImage) {\n    modules.imageResize = {\n      modules: [\"Resize\", \"DisplaySize\"]\n    }\n    modules.imageUpload = {\n      url: $(container).data(\"uploadImagesPath\"),\n      method: \"POST\",\n      name: \"image\",\n      withCredentials: false,\n      headers: { \"X-CSRF-Token\": token },\n      callbackOK: (serverResponse, next) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        next(serverResponse.url);\n      },\n      callbackKO: (serverError) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        console.log(`Image upload error: ${serverError.message}`);\n      },\n      checkBeforeSend: (file, next) => {\n        $(\"div.ql-toolbar\").last().addClass(\"editor-loading\")\n        next(file);\n      }\n    }\n  }\n  const quill = new Quill(container, {\n    modules: modules,\n    formats: quillFormats,\n    theme: \"snow\"\n  });\n\n\n\n  if (disabled) {\n    quill.disable();\n  }\n\n  quill.on(\"text-change\", () => {\n    const text = quill.getText();\n\n    // Triggers CustomEvent with the cursor position\n    // It is required in input_mentions.js\n    let event = new CustomEvent(\"quill-position\", {\n      detail: quill.getSelection()\n    });\n    container.dispatchEvent(event);\n\n    if ((text === \"\\n\" || text === \"\\n\\n\") && quill.root.querySelectorAll(allowedEmptyContentSelector).length === 0) {\n      $input.val(\"\");\n    } else {\n      const emptyParagraph = \"<p><br></p>\";\n      const cleanHTML = quill.root.innerHTML.replace(\n        new RegExp(`^${emptyParagraph}|${emptyParagraph}$`, \"g\"),\n        \"\"\n      );\n      $input.val(cleanHTML);\n    }\n  });\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  if (addImage) {\n    const text = $(container).data(\"dragAndDropHelpText\");\n    $(container).after(`<p class=\"help-text\" style=\"margin-top:-1.5rem;\">${text}</p>`);\n  }\n\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  return quill;\n});\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}