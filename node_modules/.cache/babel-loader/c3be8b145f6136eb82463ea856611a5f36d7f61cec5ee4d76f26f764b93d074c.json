{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { DOMSerializer } from \"prosemirror-model\";\nimport { getDictionary } from \"src/decidim/i18n\";\nvar createControl = function createControl(position, label) {\n  var el = document.createElement(\"button\");\n  el.type = \"button\";\n  el.ariaLabel = label;\n  el.dataset.imageResizerControl = position;\n  return el;\n};\nvar createDimensionDisplay = function createDimensionDisplay() {\n  var el = document.createElement(\"div\");\n  el.dataset.imageResizerDimensions = \"\";\n  var width = document.createElement(\"span\");\n  width.dataset.imageResizerDimension = \"width\";\n  width.dataset.imageResizerDimensionValue = \"\";\n  var height = document.createElement(\"span\");\n  height.dataset.imageResizerDimension = \"height\";\n  height.dataset.imageResizerDimensionValue = \"\";\n  el.append(width);\n  el.append(\"Ã—\");\n  el.append(height);\n  return {\n    wrapper: el,\n    width: width,\n    height: height\n  };\n};\n\n/**\n * Wraps the editor element around the resizable element and implements the\n * resizer functionality.\n *\n * @param {Object} self The node extension to create the view for\n * @returns {Function} The custom node view callback to pass on to TipTap\n */\nexport default (function (self) {\n  var i18nResize = getDictionary(\"editor.extensions.image.nodeView.resizer\");\n  var createResizeControl = function createResizeControl(position) {\n    var label = i18nResize[\"control.resize\"];\n    var positionLabel = i18nResize[\"position.\".concat(position.replace(/-(\\w)/, function (da, ch) {\n      return ch.toUpperCase();\n    }))];\n    return createControl(position, label.replace(\"%position%\", positionLabel));\n  };\n  return function (_ref) {\n    var editor = _ref.editor,\n      node = _ref.node,\n      getPos = _ref.getPos;\n    var resizer = document.createElement(\"div\");\n    resizer.dataset.imageResizerWrapper = \"\";\n    resizer.append(createResizeControl(\"top-left\"));\n    resizer.append(createResizeControl(\"top-right\"));\n    resizer.append(createResizeControl(\"bottom-left\"));\n    resizer.append(createResizeControl(\"bottom-right\"));\n    var dimensions = createDimensionDisplay();\n    resizer.append(dimensions.wrapper);\n    var contentDOM = DOMSerializer.fromSchema(node.type.schema).serializeNode(node);\n    resizer.append(contentDOM);\n    var img = contentDOM.querySelector(\"img\");\n    var activeResizeControl = null,\n      currentHeight = null,\n      currentSrc = node.attrs.src,\n      currentWidth = null,\n      naturalHeight = img.naturalHeight,\n      naturalWidth = img.naturalWidth,\n      originalWidth = null,\n      resizeStartPosition = null;\n\n    // Used to reliably get the image width so that it is not reported as zero\n    // in case the original image element has not finished loading yet.\n    var tmpImg = document.createElement(\"img\");\n    var givenWidth = node.attrs.width;\n    tmpImg.onload = function () {\n      naturalWidth = tmpImg.naturalWidth;\n      naturalHeight = tmpImg.naturalHeight;\n\n      // Set currentWidth and currentHeight\n      if (givenWidth === null) {\n        currentWidth = naturalWidth;\n        currentHeight = naturalHeight;\n      } else {\n        currentWidth = givenWidth;\n        currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n      }\n\n      // Force node update in order to set the initial dimensions\n      [_objectSpread(_objectSpread({}, node.attrs), {}, {\n        width: 1\n      }), node.attrs].forEach(function (newAttrs) {\n        // The `setTimeout` below is to push the node updates to the next JS\n        // event loop so that we are not triggering a change in the element\n        // before it is created as would happen e.g. during the Jest tests.\n        setTimeout(function () {\n          editor.view.dispatch(editor.view.state.tr.setNodeMarkup(getPos(), self.type, newAttrs));\n        }, 0);\n      });\n    };\n    tmpImg.src = img.src;\n    var getEventPagePosition = function getEventPagePosition(ev, device) {\n      if (device === \"touch\") {\n        var originalEv = ev.originalEvent;\n        var touches = ev.touches || ev.changedTouches || originalEv.touches || originalEv.changedTouches;\n        if (!touches) {\n          return {\n            xPos: null,\n            yPos: null\n          };\n        }\n        var touch = touches[0];\n        return {\n          xPos: touch.pageX,\n          yPos: touch.pageY\n        };\n      }\n      return {\n        xPos: ev.clientX,\n        yPos: ev.clientY\n      };\n    };\n    var handleMove = function handleMove(ev, device) {\n      var _getEventPagePosition = getEventPagePosition(ev, device),\n        xPos = _getEventPagePosition.xPos;\n      var diff = resizeStartPosition - xPos;\n      if (activeResizeControl.match(/-left$/)) {\n        diff *= -1;\n      }\n      currentWidth = Math.round(originalWidth * (1 - diff / originalWidth));\n      if (currentWidth < 100) {\n        currentWidth = 100;\n      } else if (currentWidth >= naturalWidth) {\n        currentWidth = naturalWidth;\n      }\n      currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n      var width = currentWidth;\n      if (width >= naturalWidth) {\n        width = null;\n      }\n      editor.commands.updateAttributes(\"image\", {\n        width: width\n      });\n    };\n    var handleMouseMove = function handleMouseMove(ev) {\n      return handleMove(ev, \"mouse\");\n    };\n    var handleTouchMove = function handleTouchMove(ev) {\n      return handleMove(ev, \"touch\");\n    };\n    var handleEnd = function handleEnd() {\n      activeResizeControl = resizeStartPosition = null;\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleEnd);\n      document.removeEventListener(\"touchend\", handleEnd);\n    };\n    resizer.querySelectorAll(\"[data-image-resizer-control]\").forEach(function (ctrl) {\n      var handleStart = function handleStart(ev, device) {\n        // Only allow mouse events to start the resize on the primary button\n        // click.\n        if (device === \"mouse\" && ev.button !== 0) {\n          return;\n        }\n        if (!editor.isEditable || activeResizeControl) {\n          return;\n        }\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"touchmove\", handleTouchMove);\n        document.addEventListener(\"mouseup\", handleEnd);\n        document.addEventListener(\"touchend\", handleEnd);\n        ev.preventDefault();\n        activeResizeControl = ctrl.dataset.imageResizerControl;\n        originalWidth = editor.getAttributes(\"image\").width || naturalWidth;\n        resizeStartPosition = getEventPagePosition(ev, device).xPos;\n      };\n      var handleMouseStart = function handleMouseStart(ev) {\n        return handleStart(ev, \"mouse\");\n      };\n      var handleTouchStart = function handleTouchStart(ev) {\n        return handleStart(ev, \"touch\");\n      };\n      ctrl.addEventListener(\"mousedown\", handleMouseStart);\n      ctrl.addEventListener(\"touchstart\", handleTouchStart);\n    });\n    var dom = document.createElement(\"div\");\n    dom.dataset.imageResizer = \"\";\n    dom.append(resizer);\n    return {\n      dom: dom,\n      contentDOM: contentDOM,\n      update: function update(updatedNode) {\n        if (updatedNode.type !== self.type) {\n          return false;\n        }\n        var _updatedNode$attrs = updatedNode.attrs,\n          alt = _updatedNode$attrs.alt,\n          src = _updatedNode$attrs.src,\n          title = _updatedNode$attrs.title,\n          width = _updatedNode$attrs.width;\n\n        // We set the value through an attribute change here because otherwise\n        // we would trigger a mutation in the DOM which causes the update method\n        // to be called recursively.\n        dimensions.width.dataset.imageResizerDimensionValue = currentWidth;\n        dimensions.height.dataset.imageResizerDimensionValue = currentHeight;\n        img.alt = alt;\n        if (currentSrc !== src) {\n          img.src = src;\n          currentSrc = src;\n        }\n        if (title) {\n          img.title = title;\n        } else {\n          img.removeAttribute(\"title\");\n        }\n        if (width) {\n          img.width = width;\n        } else {\n          img.removeAttribute(\"width\");\n        }\n        return true;\n      }\n    };\n  };\n});","map":{"version":3,"names":["DOMSerializer","getDictionary","createControl","position","label","el","document","createElement","type","ariaLabel","dataset","imageResizerControl","createDimensionDisplay","imageResizerDimensions","width","imageResizerDimension","imageResizerDimensionValue","height","append","wrapper","self","i18nResize","createResizeControl","positionLabel","concat","replace","da","ch","toUpperCase","_ref","editor","node","getPos","resizer","imageResizerWrapper","dimensions","contentDOM","fromSchema","schema","serializeNode","img","querySelector","activeResizeControl","currentHeight","currentSrc","attrs","src","currentWidth","naturalHeight","naturalWidth","originalWidth","resizeStartPosition","tmpImg","givenWidth","onload","Math","round","_objectSpread","forEach","newAttrs","setTimeout","view","dispatch","state","tr","setNodeMarkup","getEventPagePosition","ev","device","originalEv","originalEvent","touches","changedTouches","xPos","yPos","touch","pageX","pageY","clientX","clientY","handleMove","_getEventPagePosition","diff","match","commands","updateAttributes","handleMouseMove","handleTouchMove","handleEnd","removeEventListener","querySelectorAll","ctrl","handleStart","button","isEditable","addEventListener","preventDefault","getAttributes","handleMouseStart","handleTouchStart","dom","imageResizer","update","updatedNode","_updatedNode$attrs","alt","title","removeAttribute"],"sources":["/home/daniele/decidim_idra-main/app/packs/src/decidim/editor/extensions/image/node_view.js"],"sourcesContent":["import { DOMSerializer } from \"prosemirror-model\";\n\nimport { getDictionary } from \"src/decidim/i18n\";\n\nconst createControl = (position, label) => {\n  const el = document.createElement(\"button\");\n  el.type = \"button\";\n  el.ariaLabel = label;\n  el.dataset.imageResizerControl = position;\n  return el;\n};\n\nconst createDimensionDisplay = () => {\n  const el = document.createElement(\"div\");\n  el.dataset.imageResizerDimensions = \"\";\n\n  const width = document.createElement(\"span\");\n  width.dataset.imageResizerDimension = \"width\";\n  width.dataset.imageResizerDimensionValue = \"\";\n\n  const height = document.createElement(\"span\");\n  height.dataset.imageResizerDimension = \"height\";\n  height.dataset.imageResizerDimensionValue = \"\";\n\n  el.append(width);\n  el.append(\"Ã—\");\n  el.append(height);\n\n  return { wrapper: el, width, height };\n};\n\n/**\n * Wraps the editor element around the resizable element and implements the\n * resizer functionality.\n *\n * @param {Object} self The node extension to create the view for\n * @returns {Function} The custom node view callback to pass on to TipTap\n */\nexport default (self) => {\n  const i18nResize = getDictionary(\"editor.extensions.image.nodeView.resizer\");\n  const createResizeControl = (position) => {\n    const label = i18nResize[\"control.resize\"];\n    const positionLabel = i18nResize[`position.${position.replace(/-(\\w)/, (da, ch) => ch.toUpperCase())}`];\n\n    return createControl(position, label.replace(\"%position%\", positionLabel));\n  }\n\n  return ({ editor, node, getPos }) => {\n    const resizer = document.createElement(\"div\");\n    resizer.dataset.imageResizerWrapper = \"\";\n    resizer.append(createResizeControl(\"top-left\"));\n    resizer.append(createResizeControl(\"top-right\"));\n    resizer.append(createResizeControl(\"bottom-left\"));\n    resizer.append(createResizeControl(\"bottom-right\"));\n\n    const dimensions = createDimensionDisplay();\n    resizer.append(dimensions.wrapper);\n\n    const contentDOM = DOMSerializer.fromSchema(node.type.schema).serializeNode(node);\n    resizer.append(contentDOM);\n\n    const img = contentDOM.querySelector(\"img\");\n    let activeResizeControl = null,\n        currentHeight = null,\n        currentSrc = node.attrs.src,\n        currentWidth = null,\n        naturalHeight = img.naturalHeight,\n        naturalWidth = img.naturalWidth,\n        originalWidth = null,\n        resizeStartPosition = null;\n\n    // Used to reliably get the image width so that it is not reported as zero\n    // in case the original image element has not finished loading yet.\n    const tmpImg = document.createElement(\"img\");\n    const { width: givenWidth } = node.attrs;\n    tmpImg.onload = () => {\n      naturalWidth = tmpImg.naturalWidth;\n      naturalHeight = tmpImg.naturalHeight;\n\n      // Set currentWidth and currentHeight\n      if (givenWidth === null) {\n        currentWidth = naturalWidth;\n        currentHeight = naturalHeight;\n      } else {\n        currentWidth = givenWidth;\n        currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n      }\n\n      // Force node update in order to set the initial dimensions\n      [{ ...node.attrs, width: 1 }, node.attrs].forEach((newAttrs) => {\n        // The `setTimeout` below is to push the node updates to the next JS\n        // event loop so that we are not triggering a change in the element\n        // before it is created as would happen e.g. during the Jest tests.\n        setTimeout(() => {\n          editor.view.dispatch(\n            editor.view.state.tr.setNodeMarkup(getPos(), self.type, newAttrs)\n          );\n        }, 0);\n      });\n    }\n    tmpImg.src = img.src;\n\n    const getEventPagePosition = (ev, device) => {\n      if (device === \"touch\") {\n        const originalEv = ev.originalEvent;\n        const touches = ev.touches || ev.changedTouches || originalEv.touches || originalEv.changedTouches;\n        if (!touches) {\n          return { xPos: null, yPos: null };\n        }\n        const touch = touches[0];\n        return { xPos: touch.pageX, yPos: touch.pageY };\n      }\n      return { xPos: ev.clientX, yPos: ev.clientY };\n    };\n    const handleMove = (ev, device) => {\n      let { xPos } = getEventPagePosition(ev, device);\n      let diff = resizeStartPosition - xPos;\n      if (activeResizeControl.match(/-left$/)) {\n        diff *= -1;\n      }\n\n      currentWidth = Math.round(originalWidth * (1 - diff / originalWidth));\n      if (currentWidth < 100) {\n        currentWidth = 100;\n      } else if (currentWidth >= naturalWidth) {\n        currentWidth = naturalWidth;\n      }\n      currentHeight = Math.round(naturalHeight * (currentWidth / naturalWidth));\n\n\n      let width = currentWidth;\n      if (width >= naturalWidth) {\n        width = null;\n      }\n      editor.commands.updateAttributes(\"image\", { width });\n    };\n    const handleMouseMove = (ev) => handleMove(ev, \"mouse\");\n    const handleTouchMove = (ev) => handleMove(ev, \"touch\");\n    const handleEnd = () => {\n      activeResizeControl = resizeStartPosition = null;\n\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleEnd);\n      document.removeEventListener(\"touchend\", handleEnd);\n    };\n    resizer.querySelectorAll(\"[data-image-resizer-control]\").forEach((ctrl) => {\n      const handleStart = (ev, device) => {\n        // Only allow mouse events to start the resize on the primary button\n        // click.\n        if (device === \"mouse\" && ev.button !== 0) {\n          return;\n        }\n        if (!editor.isEditable || activeResizeControl) {\n          return;\n        }\n\n        document.addEventListener(\"mousemove\", handleMouseMove);\n        document.addEventListener(\"touchmove\", handleTouchMove);\n        document.addEventListener(\"mouseup\", handleEnd);\n        document.addEventListener(\"touchend\", handleEnd);\n\n        ev.preventDefault();\n        activeResizeControl = ctrl.dataset.imageResizerControl;\n        originalWidth = editor.getAttributes(\"image\").width || naturalWidth;\n\n        resizeStartPosition = getEventPagePosition(ev, device).xPos;\n      };\n      const handleMouseStart = (ev) => handleStart(ev, \"mouse\");\n      const handleTouchStart = (ev) => handleStart(ev, \"touch\");\n\n      ctrl.addEventListener(\"mousedown\", handleMouseStart);\n      ctrl.addEventListener(\"touchstart\", handleTouchStart);\n    });\n\n    const dom = document.createElement(\"div\");\n    dom.dataset.imageResizer = \"\";\n    dom.append(resizer);\n\n    return {\n      dom,\n      contentDOM,\n      update: (updatedNode) => {\n        if (updatedNode.type !== self.type) {\n          return false;\n        }\n\n        const { alt, src, title, width } = updatedNode.attrs;\n\n        // We set the value through an attribute change here because otherwise\n        // we would trigger a mutation in the DOM which causes the update method\n        // to be called recursively.\n        dimensions.width.dataset.imageResizerDimensionValue = currentWidth;\n        dimensions.height.dataset.imageResizerDimensionValue = currentHeight;\n\n        img.alt = alt;\n        if (currentSrc !== src) {\n          img.src = src;\n          currentSrc = src;\n        }\n        if (title) {\n          img.title = title;\n        } else {\n          img.removeAttribute(\"title\");\n        }\n        if (width) {\n          img.width = width;\n        } else {\n          img.removeAttribute(\"width\");\n        }\n\n        return true;\n      }\n    };\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}