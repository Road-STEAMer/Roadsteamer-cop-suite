{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/* eslint-disable require-jsdoc */\n\nimport lineBreakButtonHandler from \"src/decidim/editor/linebreak_module\";\nimport \"src/decidim/editor/clipboard_override\";\nimport \"src/decidim/vendor/image-resize.min\";\nimport \"src/decidim/vendor/image-upload.min\";\nvar quillFormats = [\"bold\", \"italic\", \"link\", \"underline\", \"header\", \"list\", \"video\", \"image\", \"alt\", \"break\", \"width\", \"style\", \"code\", \"blockquote\", \"indent\"];\nexport default function createQuillEditor(container) {\n  var toolbar = $(container).data(\"toolbar\");\n  var disabled = $(container).data(\"disabled\");\n  var allowedEmptyContentSelector = \"iframe\";\n  var quillToolbar = [[\"bold\", \"italic\", \"underline\", \"linebreak\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }], [\"link\", \"clean\"], [\"code\", \"blockquote\"], [{\n    \"indent\": \"-1\"\n  }, {\n    \"indent\": \"+1\"\n  }], [{\n    'savedDataset': \"openModal\"\n  }]];\n  var addImage = $(container).data(\"editorImages\");\n  if (toolbar === \"full\") {\n    quillToolbar = [[{\n      header: [2, 3, 4, 5, 6, false]\n    }]].concat(_toConsumableArray(quillToolbar), [[\"video\"]]);\n  } else if (toolbar === \"basic\") {\n    quillToolbar = [].concat(_toConsumableArray(quillToolbar), [[\"video\"]]);\n  }\n  var modalData = null; // Declare a variable to store the data\n\n  // Function to create and display the modal\n  function openModal() {\n    // Create a modal container\n    var modalContainer = document.createElement('div');\n    modalContainer.classList.add('modal-container');\n\n    // Create a modal element\n    var modal = document.createElement('div');\n    modal.classList.add('modal');\n\n    // Modal content\n    modal.innerHTML = \"\\n    <div class=\\\"modal-content\\\" id=\\\"modalContent\\\">\\n      <span class=\\\"close\\\" id=\\\"closeModal\\\">&times;</span>\\n      \".concat(modalData, \"\\n    </div>\\n  \");\n\n    // Handle inserting link text to Quill editor\n    var insertLinkToEditorButton = document.getElementById('insertLinkToEditor');\n    insertLinkToEditorButton.addEventListener('click', function () {\n      // Get the text of the link\n      var linkText = insertLinkToEditorButton.innerText;\n\n      // Insert the link text into the Quill editor\n      quill.clipboard.dangerouslyPasteHTML(quill.getLength(), \"<a href=\\\"#\\\">\".concat(linkText, \"</a>\"));\n\n      // Close the modal\n      modalContainer.style.display = 'none';\n    });\n    modalContainer.appendChild(modal);\n    document.body.appendChild(modalContainer);\n\n    // Open the modal\n    modalContainer.style.display = 'block';\n\n    // Close modal when the close button is clicked\n    var closeModalButton = document.getElementById('closeModal');\n    closeModalButton.addEventListener('click', function () {\n      modalContainer.style.display = 'none';\n    });\n\n    // Close modal when clicking outside the modal\n    window.addEventListener('click', function (event) {\n      if (event.target == modalContainer) {\n        modalContainer.style.display = 'none';\n      }\n    });\n  }\n\n  // Function to fetch data\n  function fetchDataAndOpenModal() {\n    if (modalData === null) {\n      // If data hasn't been fetched, make the GET request\n      $.get('/idra_update', function (data) {\n        modalData = data;\n        openModal(data);\n      });\n    } else {\n      // If data is already available, open the modal with the stored data\n      openModal(modalData);\n    }\n  }\n  var modules = {\n    linebreak: {},\n    toolbar: {\n      container: quillToolbar,\n      handlers: {\n        \"linebreak\": lineBreakButtonHandler,\n        \"savedDataset\": fetchDataAndOpenModal\n      }\n    }\n  };\n  var $input = $(container).siblings('input[type=\"hidden\"]');\n  container.innerHTML = $input.val() || \"\";\n  var token = $('meta[name=\"csrf-token\"]').attr(\"content\");\n  if (addImage) {\n    modules.imageResize = {\n      modules: [\"Resize\", \"DisplaySize\"]\n    };\n    modules.imageUpload = {\n      url: $(container).data(\"uploadImagesPath\"),\n      method: \"POST\",\n      name: \"image\",\n      withCredentials: false,\n      headers: {\n        \"X-CSRF-Token\": token\n      },\n      callbackOK: function callbackOK(serverResponse, next) {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\");\n        next(serverResponse.url);\n      },\n      callbackKO: function callbackKO(serverError) {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\");\n        console.log(\"Image upload error: \".concat(serverError.message));\n      },\n      checkBeforeSend: function checkBeforeSend(file, next) {\n        $(\"div.ql-toolbar\").last().addClass(\"editor-loading\");\n        next(file);\n      }\n    };\n  }\n  var quill = new Quill(container, {\n    modules: modules,\n    formats: quillFormats,\n    theme: \"snow\"\n  });\n  if (disabled) {\n    quill.disable();\n  }\n  quill.on(\"text-change\", function () {\n    var text = quill.getText();\n\n    // Triggers CustomEvent with the cursor position\n    // It is required in input_mentions.js\n    var event = new CustomEvent(\"quill-position\", {\n      detail: quill.getSelection()\n    });\n    container.dispatchEvent(event);\n    if ((text === \"\\n\" || text === \"\\n\\n\") && quill.root.querySelectorAll(allowedEmptyContentSelector).length === 0) {\n      $input.val(\"\");\n    } else {\n      var emptyParagraph = \"<p><br></p>\";\n      var cleanHTML = quill.root.innerHTML.replace(new RegExp(\"^\".concat(emptyParagraph, \"|\").concat(emptyParagraph, \"$\"), \"g\"), \"\");\n      $input.val(cleanHTML);\n    }\n  });\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n  if (addImage) {\n    var text = $(container).data(\"dragAndDropHelpText\");\n    $(container).after(\"<p class=\\\"help-text\\\" style=\\\"margin-top:-1.5rem;\\\">\".concat(text, \"</p>\"));\n  }\n\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n  return quill;\n}","map":{"version":3,"names":["lineBreakButtonHandler","quillFormats","createQuillEditor","container","toolbar","$","data","disabled","allowedEmptyContentSelector","quillToolbar","list","addImage","header","concat","_toConsumableArray","modalData","openModal","modalContainer","document","createElement","classList","add","modal","innerHTML","insertLinkToEditorButton","getElementById","addEventListener","linkText","innerText","quill","clipboard","dangerouslyPasteHTML","getLength","style","display","appendChild","body","closeModalButton","window","event","target","fetchDataAndOpenModal","get","modules","linebreak","handlers","$input","siblings","val","token","attr","imageResize","imageUpload","url","method","name","withCredentials","headers","callbackOK","serverResponse","next","last","removeClass","callbackKO","serverError","console","log","message","checkBeforeSend","file","addClass","Quill","formats","theme","disable","on","text","getText","CustomEvent","detail","getSelection","dispatchEvent","root","querySelectorAll","length","emptyParagraph","cleanHTML","replace","RegExp","emitter","emit","after"],"sources":["/home/daniele/decidim_idra-main/app/packs/src/decidim/editor.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\n\nimport lineBreakButtonHandler from \"src/decidim/editor/linebreak_module\"\nimport \"src/decidim/editor/clipboard_override\"\nimport \"src/decidim/vendor/image-resize.min\"\nimport \"src/decidim/vendor/image-upload.min\"\n\nconst quillFormats = [\"bold\", \"italic\", \"link\", \"underline\", \"header\", \"list\", \"video\", \"image\", \"alt\", \"break\", \"width\", \"style\", \"code\", \"blockquote\", \"indent\"];\n\nexport default function createQuillEditor(container) {\n  const toolbar = $(container).data(\"toolbar\");\n  const disabled = $(container).data(\"disabled\");\n\n  const allowedEmptyContentSelector = \"iframe\";\n  let quillToolbar = [\n    [\"bold\", \"italic\", \"underline\", \"linebreak\",],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"link\", \"clean\"],\n    [\"code\", \"blockquote\"],\n    [{ \"indent\": \"-1\"}, { \"indent\": \"+1\" }],\n    [{'savedDataset':\"openModal\"}]\n  ]\n\n\n\n\n\n  let addImage = $(container).data(\"editorImages\");\n\n  if (toolbar === \"full\") {\n    quillToolbar = [\n      [{ header: [2, 3, 4, 5, 6, false] }],\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  } else if (toolbar === \"basic\") {\n    quillToolbar = [\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  }\n\n  var modalData = null; // Declare a variable to store the data\n\n \n  \n\n// Function to create and display the modal\nfunction openModal() {\n  // Create a modal container\n  var modalContainer = document.createElement('div');\n  modalContainer.classList.add('modal-container');\n\n  // Create a modal element\n  var modal = document.createElement('div');\n  modal.classList.add('modal');\n\n    // Modal content\n    modal.innerHTML = `\n    <div class=\"modal-content\" id=\"modalContent\">\n      <span class=\"close\" id=\"closeModal\">&times;</span>\n      ${modalData}\n    </div>\n  `;\n\n\n    // Handle inserting link text to Quill editor\n  var insertLinkToEditorButton = document.getElementById('insertLinkToEditor');\n  insertLinkToEditorButton.addEventListener('click', function() {\n    // Get the text of the link\n    var linkText = insertLinkToEditorButton.innerText;\n\n    // Insert the link text into the Quill editor\n    quill.clipboard.dangerouslyPasteHTML(quill.getLength(), `<a href=\"#\">${linkText}</a>`);\n\n    // Close the modal\n    modalContainer.style.display = 'none';\n  });\n\n  modalContainer.appendChild(modal);\n  document.body.appendChild(modalContainer);\n\n  // Open the modal\n  modalContainer.style.display = 'block';\n\n  // Close modal when the close button is clicked\n  var closeModalButton = document.getElementById('closeModal');\n  closeModalButton.addEventListener('click', function() {\n    modalContainer.style.display = 'none';\n  });\n\n  // Close modal when clicking outside the modal\n  window.addEventListener('click', function(event) {\n    if (event.target == modalContainer) {\n      modalContainer.style.display = 'none';\n    }\n  });\n}\n\n// Function to fetch data\nfunction fetchDataAndOpenModal() {\n  if (modalData === null) {\n    // If data hasn't been fetched, make the GET request\n    $.get('/idra_update', function(data) {\n      modalData = data;\n      openModal(data);\n    });\n  } else {\n    // If data is already available, open the modal with the stored data\n    openModal(modalData);\n  }\n}\n\n\n\n  let modules = {\n    linebreak: {},\n    toolbar: {\n      container: quillToolbar,\n      handlers: {\n        \"linebreak\": lineBreakButtonHandler,\n        \"savedDataset\": fetchDataAndOpenModal,\n      }\n    }\n  };\n\n\n  const $input = $(container).siblings('input[type=\"hidden\"]');\n  container.innerHTML = $input.val() || \"\";\n  const token = $('meta[name=\"csrf-token\"]').attr(\"content\");\n  if (addImage) {\n    modules.imageResize = {\n      modules: [\"Resize\", \"DisplaySize\"]\n    }\n    modules.imageUpload = {\n      url: $(container).data(\"uploadImagesPath\"),\n      method: \"POST\",\n      name: \"image\",\n      withCredentials: false,\n      headers: { \"X-CSRF-Token\": token },\n      callbackOK: (serverResponse, next) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        next(serverResponse.url);\n      },\n      callbackKO: (serverError) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        console.log(`Image upload error: ${serverError.message}`);\n      },\n      checkBeforeSend: (file, next) => {\n        $(\"div.ql-toolbar\").last().addClass(\"editor-loading\")\n        next(file);\n      }\n    }\n  }\n  const quill = new Quill(container, {\n    modules: modules,\n    formats: quillFormats,\n    theme: \"snow\"\n  });\n\n  \n\n  if (disabled) {\n    quill.disable();\n  }\n\n  quill.on(\"text-change\", () => {\n    const text = quill.getText();\n\n    // Triggers CustomEvent with the cursor position\n    // It is required in input_mentions.js\n    let event = new CustomEvent(\"quill-position\", {\n      detail: quill.getSelection()\n    });\n    container.dispatchEvent(event);\n\n    if ((text === \"\\n\" || text === \"\\n\\n\") && quill.root.querySelectorAll(allowedEmptyContentSelector).length === 0) {\n      $input.val(\"\");\n    } else {\n      const emptyParagraph = \"<p><br></p>\";\n      const cleanHTML = quill.root.innerHTML.replace(\n        new RegExp(`^${emptyParagraph}|${emptyParagraph}$`, \"g\"),\n        \"\"\n      );\n      $input.val(cleanHTML);\n    }\n  });\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  if (addImage) {\n    const text = $(container).data(\"dragAndDropHelpText\");\n    $(container).after(`<p class=\"help-text\" style=\"margin-top:-1.5rem;\">${text}</p>`);\n  }\n\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  return quill;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}