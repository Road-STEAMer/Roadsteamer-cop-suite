{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\n/* eslint-disable require-jsdoc */\n\nvar History = Quill[\"import\"](\"modules/history\");\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: true\n};\n\n/**\n * Linebreak module brokes quill's default history class.\n * So here we are moving innerHTML to undo and redo stack\n * instead of deltas.\n */\nvar HistoryOverride = /*#__PURE__*/function (_History) {\n  function HistoryOverride(quill, options) {\n    var _this;\n    _classCallCheck(this, HistoryOverride);\n    _this = _callSuper(this, HistoryOverride, [quill, options]);\n    _this.lastRecorded = 0;\n    _this.ignoreChange = false;\n    _this.init = false;\n    _this.quill.emitter.on(\"editor-ready\", function () {\n      _this.clear();\n      var $input = $(_this.quill.container).siblings('input[type=\"hidden\"]');\n      _this.stack.undo.push({\n        content: $input.val() || \"\",\n        index: _this.quill.getLength() - 2\n      });\n      _this.lastLength = _this.quill.getLength();\n    });\n    /* eslint-disable max-params */\n    _this.quill.on(Quill.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {\n      if (!delta) {\n        return;\n      }\n      if (!_this.init && eventName === \"selection-change\") {\n        _this.stack.undo[0].index = delta.index;\n      }\n      if (eventName !== Quill.events.TEXT_CHANGE || _this.ignoreChange) {\n        return;\n      }\n      if (!_this.options.userOnly || source === Quill.sources.USER) {\n        _this.record(delta, oldDelta);\n      }\n    });\n    _this.quill.keyboard.addBinding({\n      key: \"Z\",\n      shortKey: true\n    }, _this.undo.bind(_this));\n    _this.quill.keyboard.addBinding({\n      key: \"Z\",\n      shortKey: true,\n      shiftKey: true\n    }, _this.redo.bind(_this));\n    if (/Win/i.test(navigator.platform)) {\n      _this.quill.keyboard.addBinding({\n        key: \"Y\",\n        shortKey: true\n      }, _this.redo.bind(_this));\n    }\n    return _this;\n  }\n  /* eslint-enable max-params */\n  _inherits(HistoryOverride, _History);\n  return _createClass(HistoryOverride, [{\n    key: \"change\",\n    value: function change(source, dest) {\n      if (this.stack[source].length === 0) {\n        return;\n      }\n      var obj = this.updateStacks(source, dest);\n      if (!obj.content) {\n        return;\n      }\n      if (!obj.index) {\n        obj.index = 0;\n      }\n      this.lastRecorded = 0;\n      this.ignoreChange = true;\n      this.quill.setContents(this.quill.clipboard.convert(obj.content));\n      this.ignoreChange = false;\n      var index = obj.index;\n      this.quill.setSelection(index);\n    }\n  }, {\n    key: \"updateStacks\",\n    value: function updateStacks(source, dest) {\n      if (source === \"undo\") {\n        if (this.stack.undo.length === 1) {\n          return this.stack.undo[0];\n        }\n        this.stack[dest].push(this.stack.undo.pop());\n        return this.stack.undo[this.stack.undo.length - 1];\n      }\n      var content = this.stack.redo.pop();\n      this.stack.undo.push(content);\n      return content;\n    }\n  }, {\n    key: \"record\",\n    value: function record(changeDelta) {\n      if (changeDelta.ops.length === 0) {\n        return;\n      } else if (!this.init) {\n        this.init = true;\n      }\n      this.stack.redo = [];\n      var timestamp = Date.now();\n      // Should not return after length check, because after linebreak a keypress replaces invisible characters with\n      // visible characters.\n      // For example: <br><br></p> -> [press X] -> <br>X</p>.\n      if (Math.abs(this.lastLength === this.quill.getLength()) || this.lastRecorded + this.options.delay > timestamp) {\n        if (this.stack.undo.length > 1) {\n          this.stack.undo.pop();\n        }\n      } else {\n        this.lastLength = this.quill.getLength();\n        if (this.lastRecorded + this.options.delay <= timestamp) {\n          this.lastRecorded = timestamp;\n        }\n      }\n      this.stack.undo.push({\n        content: this.quill.container.firstChild.innerHTML,\n        index: this.quill.getSelection()\n      });\n    }\n  }, {\n    key: \"transform\",\n    value: function transform() {\n      return;\n    }\n  }]);\n}(History);\nexport { HistoryOverride as default };","map":{"version":3,"names":["History","Quill","DEFAULTS","delay","maxStack","userOnly","HistoryOverride","_History","quill","options","_this","_classCallCheck","_callSuper","lastRecorded","ignoreChange","init","emitter","on","clear","$input","$","container","siblings","stack","undo","push","content","val","index","getLength","lastLength","events","EDITOR_CHANGE","eventName","delta","oldDelta","source","TEXT_CHANGE","sources","USER","record","keyboard","addBinding","key","shortKey","bind","shiftKey","redo","test","navigator","platform","_inherits","_createClass","value","change","dest","length","obj","updateStacks","setContents","clipboard","convert","setSelection","pop","changeDelta","ops","timestamp","Date","now","Math","abs","firstChild","innerHTML","getSelection","transform","default"],"sources":["/home/daniele/decidim_idra/app/packs/src/decidim/editor/history_override.js"],"sourcesContent":["/* eslint-disable require-jsdoc */\n\nconst History = Quill.import(\"modules/history\");\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: true\n};\n\n/**\n * Linebreak module brokes quill's default history class.\n * So here we are moving innerHTML to undo and redo stack\n * instead of deltas.\n */\nexport default class HistoryOverride extends History {\n  constructor(quill, options) {\n    super(quill, options);\n    this.lastRecorded = 0;\n    this.ignoreChange = false;\n    this.init = false;\n    this.quill.emitter.on(\"editor-ready\", () => {\n      this.clear();\n      const $input = $(this.quill.container).siblings('input[type=\"hidden\"]');\n      this.stack.undo.push({content: $input.val() || \"\", index: this.quill.getLength() - 2 });\n      this.lastLength = this.quill.getLength();\n    })\n    /* eslint-disable max-params */\n    this.quill.on(Quill.events.EDITOR_CHANGE, (eventName, delta, oldDelta, source) => {\n      if (!delta) {\n        return;\n      }\n      if (!this.init && eventName === \"selection-change\") {\n        this.stack.undo[0].index = delta.index;\n      }\n      if (eventName !== Quill.events.TEXT_CHANGE || this.ignoreChange) {\n        return;\n      }\n\n      if (!this.options.userOnly || source === Quill.sources.USER) {\n        this.record(delta, oldDelta);\n      }\n    });\n    this.quill.keyboard.addBinding({ key: \"Z\", shortKey: true }, this.undo.bind(this));\n    this.quill.keyboard.addBinding({ key: \"Z\", shortKey: true, shiftKey: true }, this.redo.bind(this));\n    if ((/Win/i).test(navigator.platform)) {\n      this.quill.keyboard.addBinding({ key: \"Y\", shortKey: true }, this.redo.bind(this));\n    }\n  }\n  /* eslint-enable max-params */\n\n  change(source, dest) {\n    if (this.stack[source].length === 0) {\n      return;\n    }\n    let obj = this.updateStacks(source, dest);\n    if (!obj.content) {\n      return;\n    }\n    if (!obj.index) {\n      obj.index = 0\n    }\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.setContents(this.quill.clipboard.convert(obj.content));\n    this.ignoreChange = false;\n    let index = obj.index;\n    this.quill.setSelection(index);\n  }\n\n  updateStacks(source, dest) {\n    if (source === \"undo\") {\n      if (this.stack.undo.length === 1) {\n        return this.stack.undo[0]\n      }\n      this.stack[dest].push(this.stack.undo.pop())\n      return this.stack.undo[this.stack.undo.length - 1]\n    }\n    let content = this.stack.redo.pop();\n    this.stack.undo.push(content)\n    return content\n  }\n\n  record(changeDelta) {\n    if (changeDelta.ops.length === 0) {\n      return\n    } else if (!this.init) {\n      this.init = true;\n    }\n    this.stack.redo = [];\n    let timestamp = Date.now();\n    // Should not return after length check, because after linebreak a keypress replaces invisible characters with\n    // visible characters.\n    // For example: <br><br></p> -> [press X] -> <br>X</p>.\n    if (Math.abs(this.lastLength === this.quill.getLength()) || this.lastRecorded + this.options.delay > timestamp) {\n      if (this.stack.undo.length > 1) {\n        this.stack.undo.pop();\n      }\n    } else {\n      this.lastLength = this.quill.getLength();\n      if (this.lastRecorded + this.options.delay <= timestamp) {\n        this.lastRecorded = timestamp;\n      }\n    }\n    this.stack.undo.push({content: this.quill.container.firstChild.innerHTML, index: this.quill.getSelection()})\n  }\n\n  transform() {\n    return;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}