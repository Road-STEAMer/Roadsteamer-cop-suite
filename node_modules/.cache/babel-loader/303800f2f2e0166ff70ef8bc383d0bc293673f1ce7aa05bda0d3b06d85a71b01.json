{"ast":null,"code":"import FormStorage from \"form-storage\";\n$(function () {\n  window.DecidimAwesome = window.DecidimAwesome || {};\n  if (!window.DecidimAwesome.auto_save_forms) {\n    return;\n  }\n  var questionnaireId = window.DecidimAwesome.current_questionnaire;\n  if (!questionnaireId) {\n    // console.log(\"Not a questionnaire page\")\n    return;\n  }\n  var storeId = \"awesome_autosave:\".concat(questionnaireId);\n  var storeCheckboxesId = \"awesome_autosave:checkboxes:\".concat(questionnaireId);\n  var $form = $(\"form.answer-questionnaire\");\n  if (!$form.length) {\n    if (window.DecidimAwesome.questionnaire_answered) {\n      // console.log(\"Questionnaire already answered, remove any data saved\");\n      window.localStorage.removeItem(storeId);\n      window.localStorage.removeItem(storeCheckboxesId);\n    }\n    // console.log(\"No forms here\");\n    return;\n  }\n  var store = new FormStorage(\"#\".concat($form.attr(\"id\")), {\n    name: storeId,\n    ignores: [\n    // '[type=\"hidden\"]',\n    '[name=\"utf8\"]', '[name=\"authenticity_token\"]', \"[disabled]\",\n    // there are problems with matrix questions\n    '[type=\"checkbox\"]']\n  });\n  var showMsg = function showMsg(msg) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var defaultTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 700;\n    var time = error ? 5000 : defaultTime; // eslint-disable-line no-ternary, multiline-ternary\n    var $div = $(\"<div class=\\\"awesome_autosave-notice\".concat(error ? \" error\" : \"\", \"\\\">\").concat(msg, \"</div>\")).appendTo($form); // eslint-disable-line no-ternary, multiline-ternary\n    setTimeout(function () {\n      $div.fadeOut(500, function () {\n        $div.remove();\n      });\n    }, time);\n  };\n  if (!window.localStorage) {\n    showMsg(window.DecidimAwesome.texts.autosaved_error, true);\n    return;\n  }\n  if (window.localStorage.getItem(storeId)) {\n    showMsg(window.DecidimAwesome.texts.autosaved_retrieved, false, 5000);\n  }\n\n  // restore if available\n  store.apply(); // eslint-disable-line prefer-reflect\n  // restore checkboxes\n  try {\n    var checkboxes = JSON.parse(window.localStorage.getItem(storeCheckboxesId));\n    for (var id in checkboxes) {\n      // eslint-disable-line guard-for-in\n      $(\"#\".concat(id)).prop(\"checked\", checkboxes[id]);\n    }\n  } catch (evt) {\n    console.log(\"No checkboxes found\");\n  }\n  // this trigger the \"change\" event, it seems that it is too much\n  // $form.find('input, textarea, select').change();\n\n  var save = function save() {\n    store.save();\n    // save checkbox manually\n    var checkboxes = {};\n    $form.find('input[type=\"checkbox\"]').each(function (index, el) {\n      checkboxes[el.id] = el.checked;\n    });\n    window.localStorage.setItem(storeCheckboxesId, JSON.stringify(checkboxes));\n    showMsg(window.DecidimAwesome.texts.autosaved_success);\n  };\n\n  // save changes when modifications\n  $form.find(\"input, textarea, select\").on(\"change\", function () {\n    save();\n  });\n});","map":{"version":3,"names":["FormStorage","$","window","DecidimAwesome","auto_save_forms","questionnaireId","current_questionnaire","storeId","concat","storeCheckboxesId","$form","length","questionnaire_answered","localStorage","removeItem","store","attr","name","ignores","showMsg","msg","error","arguments","undefined","defaultTime","time","$div","appendTo","setTimeout","fadeOut","remove","texts","autosaved_error","getItem","autosaved_retrieved","apply","checkboxes","JSON","parse","id","prop","evt","console","log","save","find","each","index","el","checked","setItem","stringify","autosaved_success","on"],"sources":["/home/daniele/.rbenv/versions/3.0.2/lib/ruby/gems/3.0.0/gems/decidim-decidim_awesome-0.10.2/app/packs/src/decidim/decidim_awesome/forms/autosave.js"],"sourcesContent":["import FormStorage from \"form-storage\"\n\n$(() => {\n  window.DecidimAwesome = window.DecidimAwesome || {};\n  if (!window.DecidimAwesome.auto_save_forms) {\n    return;\n  }\n\n  const questionnaireId = window.DecidimAwesome.current_questionnaire;\n  if (!questionnaireId) {\n    // console.log(\"Not a questionnaire page\")\n    return;\n  }\n\n  const storeId = `awesome_autosave:${questionnaireId}`;\n  const storeCheckboxesId = `awesome_autosave:checkboxes:${questionnaireId}`;\n  const $form = $(\"form.answer-questionnaire\");\n\n  if (!$form.length) {\n    if (window.DecidimAwesome.questionnaire_answered) {\n      // console.log(\"Questionnaire already answered, remove any data saved\");\n      window.localStorage.removeItem(storeId);\n      window.localStorage.removeItem(storeCheckboxesId);\n    }\n    // console.log(\"No forms here\");\n    return;\n  }\n\n  const store = new FormStorage(`#${$form.attr(\"id\")}`, {\n    name: storeId,\n    ignores: [\n      // '[type=\"hidden\"]',\n      '[name=\"utf8\"]',\n      '[name=\"authenticity_token\"]',\n      \"[disabled]\",\n      // there are problems with matrix questions\n      '[type=\"checkbox\"]' \n    ]\n  });\n\n  const showMsg = (msg, error = false, defaultTime = 700) => {\n    const time = error ? 5000 : defaultTime; // eslint-disable-line no-ternary, multiline-ternary\n    const $div = $(`<div class=\"awesome_autosave-notice${error ? \" error\" : \"\"}\">${msg}</div>`).appendTo($form); // eslint-disable-line no-ternary, multiline-ternary\n    setTimeout(() => {\n      $div.fadeOut(500, () => {\n        $div.remove();\n      });\n    }, time);\n  };\n\n  if (!window.localStorage) {\n    showMsg(window.DecidimAwesome.texts.autosaved_error, true);\n    return;\n  }\n\n  if (window.localStorage.getItem(storeId)) {\n    showMsg(window.DecidimAwesome.texts.autosaved_retrieved, false, 5000);\n  }\n\n  // restore if available\n  store.apply(); // eslint-disable-line prefer-reflect\n  // restore checkboxes\n  try {\n    let checkboxes = JSON.parse(window.localStorage.getItem(storeCheckboxesId));\n    for (let id in checkboxes) { // eslint-disable-line guard-for-in\n      $(`#${id}`).prop(\"checked\", checkboxes[id]);\n    }\n  } catch (evt) {\n    console.log(\"No checkboxes found\");\n  }\n  // this trigger the \"change\" event, it seems that it is too much\n  // $form.find('input, textarea, select').change();\n\n  const save = () => {\n    store.save();\n    // save checkbox manually\n    let checkboxes = {};\n    $form.find('input[type=\"checkbox\"]').each((index, el) => {\n      checkboxes[el.id] = el.checked;\n    });\n    window.localStorage.setItem(storeCheckboxesId, JSON.stringify(checkboxes));\n    showMsg(window.DecidimAwesome.texts.autosaved_success);\n  };\n\n  // save changes when modifications\n  $form.find(\"input, textarea, select\").on(\"change\", () => {\n    save();\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}